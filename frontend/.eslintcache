[{"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\index.js":"1","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\App.js":"2","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\academicMain.js":"3","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewSchedule.js":"4","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\keys_dev.js":"5","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\enums.js":"6","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewSentReplacementRequests.js":"7","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewRecievedReplacemetRequest.js":"8","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewAllRequests.js":"9","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendReplacementModal.js":"10","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendSlotLinkingModal.js":"11","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendChangeDayOff.js":"12","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendMetrinityLeaveModal.js":"13","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendSickLeave.js":"14","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendCompensationLeaveModal.js":"15","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendAccidentalLeaveModal.js":"16","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendAnnualLeaveModal.js":"17","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewSlotLinkingRequests.js":"18","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\addSlotModal.js":"19","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\updateSlotModal.js":"20","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\deleteSlotModal.js":"21","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewNotifications.js":"22","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\login.js":"23","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\changePassword.js":"24","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageCourses.js":"25","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageInstructors.js":"26","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\requestsInDepartment.js":"27","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\staffInDepartment.js":"28","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\HODMain.js":"29","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\courseInstructorStaff.js":"30","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageCoursesInstructor.js":"31","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\courseInstructorMain.js":"32","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageSlotsInstructor.js":"33"},{"size":451,"mtime":1609884175391,"results":"34","hashOfConfig":"35"},{"size":3042,"mtime":1610023860218,"results":"36","hashOfConfig":"35"},{"size":6934,"mtime":1610032228834,"results":"37","hashOfConfig":"35"},{"size":23344,"mtime":1610032279850,"results":"38","hashOfConfig":"35"},{"size":64,"mtime":1609340978045,"results":"39","hashOfConfig":"35"},{"size":805,"mtime":1608735485590,"results":"40","hashOfConfig":"35"},{"size":6311,"mtime":1610032286031,"results":"41","hashOfConfig":"35"},{"size":6414,"mtime":1610032272437,"results":"42","hashOfConfig":"35"},{"size":8934,"mtime":1610032255074,"results":"43","hashOfConfig":"35"},{"size":4791,"mtime":1609937083876,"results":"44","hashOfConfig":"35"},{"size":3623,"mtime":1609954070358,"results":"45","hashOfConfig":"35"},{"size":3733,"mtime":1609937062389,"results":"46","hashOfConfig":"35"},{"size":4033,"mtime":1609937076396,"results":"47","hashOfConfig":"35"},{"size":4127,"mtime":1609936977409,"results":"48","hashOfConfig":"35"},{"size":4239,"mtime":1609937866457,"results":"49","hashOfConfig":"35"},{"size":3699,"mtime":1609937040283,"results":"50","hashOfConfig":"35"},{"size":7388,"mtime":1609937055904,"results":"51","hashOfConfig":"35"},{"size":6829,"mtime":1610038940251,"results":"52","hashOfConfig":"35"},{"size":4850,"mtime":1609937017073,"results":"53","hashOfConfig":"35"},{"size":5426,"mtime":1609944709302,"results":"54","hashOfConfig":"35"},{"size":3301,"mtime":1609938472694,"results":"55","hashOfConfig":"35"},{"size":3362,"mtime":1610032263804,"results":"56","hashOfConfig":"35"},{"size":3854,"mtime":1610037483448,"results":"57","hashOfConfig":"35"},{"size":3929,"mtime":1610030828148,"results":"58","hashOfConfig":"35"},{"size":4678,"mtime":1610032166652,"results":"59","hashOfConfig":"35"},{"size":5951,"mtime":1610032182890,"results":"60","hashOfConfig":"35"},{"size":7695,"mtime":1610032201935,"results":"61","hashOfConfig":"35"},{"size":5320,"mtime":1610032212872,"results":"62","hashOfConfig":"35"},{"size":2265,"mtime":1610032156525,"results":"63","hashOfConfig":"35"},{"size":5212,"mtime":1610032151760,"results":"64","hashOfConfig":"35"},{"size":4949,"mtime":1610032174604,"results":"65","hashOfConfig":"35"},{"size":2068,"mtime":1610032121531,"results":"66","hashOfConfig":"35"},{"size":9778,"mtime":1610032190795,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"13bd320",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"70"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"70"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"70"},"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\index.js",[],["162","163"],"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\App.js",["164"],"import React ,{useEffect} from 'react'\r\nimport MainAcademic from './Pages/Rokaya/academicMain'\r\nimport ViewSchedule from './Pages/Rokaya/viewSchedule'\r\nimport ViewSlotLinkingRequests from './Pages/Rokaya/viewSlotLinkingRequests'\r\nimport ViewNotifications from './Pages/Rokaya/viewNotifications'\r\nimport ViewRecievedReplacements from './Pages/Rokaya/viewRecievedReplacemetRequest'\r\nimport ViewSentReplacements from './Pages/Rokaya/viewSentReplacementRequests'\r\nimport ViewAllRequests from './Pages/Rokaya/viewAllRequests'\r\nimport HODMain from './Pages/Hagar/HODMain';\r\nimport ManageCourses from './Pages/Hagar/manageCourses';\r\nimport ManageInstructors from './Pages/Hagar/manageInstructors';\r\nimport RequestsInDepartment from './Pages/Hagar/requestsInDepartment';\r\nimport StaffInDepartment from './Pages/Hagar/staffInDepartment';\r\nimport CourseInstructorMain from './Pages/Hagar/courseInstructorMain';\r\nimport ManageSlots from './Pages/Hagar/manageSlotsInstructor';\r\nimport ManageCoursesInstructor from './Pages/Hagar/manageCoursesInstructor';\r\nimport Staff from './Pages/Hagar/courseInstructorStaff';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport Login from './Pages/Rokaya/login'\r\nimport ChangePassword  from './Pages/Rokaya/changePassword'\r\n\r\n\r\nfunction App() {\r\n  //console.log(Path)\r\n  return (\r\n    <Router>\r\n    <React.Fragment>\r\n    <Route exact path='/' render={()=><Login/>}/>\r\n    <Route exact path='/home' render={()=><MainAcademic/>}/>\r\n    <Route exact path='/changePassword' render={()=><ChangePassword/>}/>\r\n    <Route exact path='/viewSchedule' render={()=><ViewSchedule/>}/>\r\n    <Route exact path='/viewSentReplacements' render={()=><ViewSentReplacements/>}/>\r\n    <Route exact path='/viewRecievedReplacements' render={()=><ViewRecievedReplacements/>}/>\r\n    <Route exact path='/viewAllRequests' render={()=><ViewAllRequests/>}/>\r\n    <Route exact path='/viewSlotLinking' render={()=><ViewSlotLinkingRequests/>}/>\r\n    <Route exact path='/viewNotifications' render={()=><ViewNotifications/>}/>\r\n    <Route exact path='/HOD' render={()=><HODMain/>}/>\r\n    <Route exact path='/HOD/manageCourses' render={()=><ManageCourses/>}/>\r\n    <Route exact path='/HOD/manageInstructors' render={() => <ManageInstructors />} />\r\n    <Route exact path='/HOD/requestsInDepartment' render={() => <RequestsInDepartment />} />\r\n    <Route exact path='/HOD/staffInDepartment' render={() => <StaffInDepartment />} />\r\n    <Route exact path='/courseInstructor' render={() => <CourseInstructorMain />} />\r\n    <Route exact path='/courseInstructor/manageCourses' render={() => <ManageCoursesInstructor />} />\r\n    <Route exact path='/courseInstructor/manageSlots' render={() => <ManageSlots />} />\r\n    <Route exact path='/courseInstructor/staffInDepartment' render={()=><Staff/>}/>\r\n    </React.Fragment>\r\n    </Router>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\academicMain.js",["165"],"import React, { useState,useEffect } from 'react'\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { useHistory } from 'react-router'\r\nimport SendReplacementRequest from '../../Components/Rokaya/sendReplacementModal'\r\nimport SendSlotLinking from '../../Components/Rokaya/sendSlotLinkingModal'\r\nimport SendChangeDayOffRequest from '../../Components/Rokaya/sendChangeDayOff'\r\nimport SendMetrinityLeave from '../../Components/Rokaya/sendMetrinityLeaveModal'\r\nimport SendSickLeave from '../../Components/Rokaya/sendSickLeave'\r\nimport SendCompensationLeave from '../../Components/Rokaya/sendCompensationLeaveModal'\r\nimport SendAccidentalLeave from '../../Components/Rokaya/sendAccidentalLeaveModal'\r\nimport SendAnnualLeave from '../../Components/Rokaya/sendAnnualLeaveModal'\r\nimport AddSlot from '../../Components/Rokaya/addSlotModal'\r\nimport UpdateSlot from '../../Components/Rokaya/updateSlotModal'\r\nimport DeleteSlot from '../../Components/Rokaya/deleteSlotModal'\r\nimport {backendLink} from '../../keys_dev'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport default function MainAcademicPage(props) {\r\n  const [sendReplacement,setSendReplacement]=useState(false)\r\n  const [sendSlot,setSendSlot]=useState(false)\r\n  const [sendDayyOff,setSendDayOff]=useState(false)\r\n  const [sendMetrinity,setSendMetrinity]=useState(false)\r\n  const [sendAccidental,setSendAccidental]=useState(false)\r\n  const [sendSick,setSendSick]=useState(false)\r\n  const [sendAnnual,setSendAnnual]=useState(false)\r\n  const [sendCompensation,setSendCompensation]=useState(false)\r\n  const [addSlot,setAddSlot]=useState(false)\r\n  const [updateSlot,setUpdateSlot]=useState(false)\r\n  const [deleteSlot,setDeleteSlot]=useState(false)\r\n  const history = useHistory()\r\n  const viewScheduleClick=()=>{\r\n    history.push(\"/viewSchedule\")\r\n  }\r\n\r\n  const viewSentReplacmentsClick=()=>{\r\n    history.push(\"/viewSentReplacements\")\r\n  }\r\n\r\n  const viewRecievedReplacmentsClick=()=>{\r\n    history.push(\"/viewRecievedReplacements\")\r\n  }\r\n  const HODClick=()=>{\r\n    history.push(\"/HOD\")\r\n  }\r\n  const InstructorClick=()=>{\r\n    history.push(\"/courseInstructor\")\r\n  }\r\n\r\n  const viewAllRequestsClick=()=>{\r\n    history.push(\"/viewAllRequests\")\r\n  }\r\n\r\n  const viewSlotLinkingClick =()=>{\r\n    history.push(\"/viewSlotLinking\")\r\n  }\r\n  const viewNotificationsClick =()=>{\r\n    history.push(\"/viewNotifications\")\r\n  }\r\n\r\n  const logoutClick= async ()=>{\r\n    sessionStorage.removeItem(\"token\")\r\n    await axios({\r\n      url: `${backendLink}/logging/logout`,\r\n      method: 'post',\r\n    }).then((res) => {\r\n        console.log(res)\r\n        \r\n    }).catch((err) => {\r\n        console.log(err.response)\r\n      })\r\n    history.push(\"/\")\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n  <Table>\r\n    <tbody className=\"MainAcademicTable\">\r\n      <td className=\"MainAcademicTableColumn1\">\r\n        <tr className=\"MainAcademicList\">\r\n        <tr >\r\n          <p className=\"MainAcademicListFont\" onClick={viewScheduleClick}>View Schedule</p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={viewNotificationsClick}>View Notifications </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={viewAllRequestsClick}>View All Submited Requests</p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={viewSentReplacmentsClick}>view Sent Replacement Requests </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={viewRecievedReplacmentsClick}>view Recieved Replacement Requests </p>\r\n        </tr>\r\n       \r\n        <tr>\r\n          <p className=\"MainAcademicListFont\"onClick={()=>{ setSendReplacement(true)}}>send Replacement Request</p>\r\n        </tr>\r\n       \r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendSlot(true)}}>Send Slot-Linking Request </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendDayOff(true)}}> Send Change Day Off Request </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendMetrinity(true)}}>Send Matrenity Leave  Request </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendAnnual(true)}}>Send Annual Leave  Requests </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendSick(true)}}>Send Sick Leave Request </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendAccidental(true)}}>Send Accidental Leave Request </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setSendCompensation(true)}}>Send Compensation Leave Request </p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={viewSlotLinkingClick}>View SlotLinking Requests</p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setAddSlot(true)}}>Add Slot</p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setUpdateSlot(true)}}>Update Slot</p>\r\n        </tr>\r\n        <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={()=>{setDeleteSlot(true)}}>Delete Slot</p>\r\n            </tr>\r\n            <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={HODClick}>HOD Main </p>\r\n            </tr>\r\n            <tr>\r\n          <p className=\"MainAcademicListFont\" onClick={InstructorClick}>Instructor Main </p>\r\n        </tr>\r\n        \r\n        </tr>\r\n       \r\n      </td>\r\n\r\n      <td className=\"MainAcademicTableColumn2\">\r\n        <tr>\r\n          \r\n        <img className=\"MainAcademicLogo\" src={logo} alt=\"Logo\" />\r\n        <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n        </tr>\r\n     </td>\r\n\r\n     </tbody>\r\n    </Table>\r\n    <SendReplacementRequest show={sendReplacement} setShow={setSendReplacement}></SendReplacementRequest>\r\n    <SendSlotLinking show={sendSlot} setShow={setSendSlot}></SendSlotLinking>\r\n    <SendChangeDayOffRequest show= {sendDayyOff}  setShow={setSendDayOff} ></SendChangeDayOffRequest>\r\n    <SendMetrinityLeave show= {sendMetrinity}  setShow={setSendMetrinity} ></SendMetrinityLeave>\r\n    <SendSickLeave show= {sendSick}  setShow={setSendSick} ></SendSickLeave>\r\n    <SendCompensationLeave  show={sendCompensation}  setShow={setSendCompensation}></SendCompensationLeave>\r\n    <SendAccidentalLeave show={sendAccidental}  setShow={setSendAccidental}></SendAccidentalLeave>\r\n    <SendAnnualLeave show ={sendAnnual} setShow={setSendAnnual}></SendAnnualLeave>\r\n    <AddSlot show={addSlot} setShow={setAddSlot}></AddSlot>\r\n    <UpdateSlot show={updateSlot} setShow={setUpdateSlot}></UpdateSlot>\r\n    <DeleteSlot show={deleteSlot} setShow={setDeleteSlot}></DeleteSlot>\r\n    </div>\r\n\r\n    \r\n\r\n  )\r\n}\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewSchedule.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React,{useEffect,useState} from 'react'\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { useHistory } from 'react-router'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nconst {slotOrder,days } = require('../../enums')\r\n\r\n\r\nfunction renderSlot(course,location){\r\n    return(\r\n        <Card>\r\n            <Card.Text> Course: {course}</Card.Text>\r\n            <Card.Text> location:{location} </Card.Text>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default function ViewSchedule(props) {\r\n//  const history = useHistory()\r\n  const [slots, setSlots] = useState([])\r\n  const [replacements, setReplacements] = useState([])\r\n  const history=useHistory()\r\n  const logoutClick= async ()=>{\r\n    sessionStorage.removeItem(\"token\")\r\n    await axios({\r\n      url: `${backendLink}/logging/logout`,\r\n      method: 'post',\r\n    }).then((res) => {\r\n        console.log(res)\r\n        \r\n    }).catch((err) => {\r\n        console.log(err.response)\r\n      })\r\n    history.push(\"/\")\r\n  }\r\n\r\n\r\n  useEffect( async () => {\r\n    console.log(\"useeffect\")\r\n       await axios({\r\n                url: `${backendLink}/schedule/viewSchedule`,\r\n                method: 'get',\r\n                headers: {\r\n                    // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                    token:sessionStorage.getItem(\"token\")\r\n                   },\r\n               \r\n              }).then((res) => {\r\n                  if(res.status===200){\r\n               setSlots(res.data.schedule[0].slots)\r\n               setReplacements(res.data.slots)\r\n              // console.log(\"yyyya\")\r\n               console.log(res.data.slots)\r\n               //console.log(replacements)\r\n                  }\r\n              }).catch((err) => {\r\n                  console.log(err.response)\r\n                })\r\n              }\r\n              ,[])\r\n              const sat1=slots.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const sat2=slots.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            })\r\n            const sat3=slots.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            })  \r\n            const sat4=slots.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            })\r\n            const sat5=slots.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            })  \r\n              \r\n            const sun1=slots.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun2=slots.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun3=slots.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun4=slots.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun5=slots.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n\r\n            const mon1=slots.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n\r\n            const mon2=slots.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const mon3=slots.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const mon4=slots.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const mon5=slots.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue1=slots.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue2=slots.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue3=slots.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue4=slots.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue5=slots.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed1=slots.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed2=slots.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed3=slots.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed4=slots.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed5=slots.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu1=slots.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu2=slots.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu3=slots.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu4=slots.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu5=slots.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n\r\n\r\n            //////////////////////////////////////////////////////////////////////\r\n            const sat11=replacements.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const sat21=replacements.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            })\r\n            const sat31=replacements.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            })  \r\n            const sat41=replacements.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            })\r\n            const sat51=replacements.filter((s)=>{\r\n                if(s.day===days.SAUTURDAY && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            })  \r\n              \r\n            const sun11=replacements.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun21=replacements.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun31=replacements.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun41=replacements.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const sun51=replacements.filter((s)=>{\r\n                if(s.day===days.SUNDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n\r\n            const mon11=replacements.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n\r\n            const mon21=replacements.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const mon31=replacements.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const mon41=replacements.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const mon51=replacements.filter((s)=>{\r\n                if(s.day===days.MONDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue11=replacements.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue21=replacements.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue31=replacements.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue41=replacements.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const tue51=replacements.filter((s)=>{\r\n                if(s.day===days.TUESDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed11=replacements.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed21=replacements.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed31=replacements.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed41=replacements.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const wed51=replacements.filter((s)=>{\r\n                if(s.day===days.WEDNESDAY  && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu11=replacements.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.FIRST){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu21=replacements.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.SECOND){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu31=replacements.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.THIRD){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu41=replacements.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.FOURTH){\r\n                    return s\r\n                }\r\n            }) \r\n            const thu51=replacements.filter((s)=>{\r\n                if(s.day===days.THURSDAY && s.order===slotOrder.FIFTH){\r\n                    return s\r\n                }\r\n            }) \r\n\r\n           \r\n    \r\n  return (\r\n      <div>\r\n          <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n          <i className=\"fa fa-sign-out fa-lg sign-out-ALL\" onClick={logoutClick}></i>\r\n          <p className=\"viewScheduleHeaders\">Schedule</p>\r\n    <Table striped bordered hover className=\" viewScheduleTable \">\r\n  <thead>\r\n    <tr>\r\n      <th className=\"viewScheduleTableHeader\">Day</th>\r\n      <th  className=\"viewScheduleTableHeader\">1st Slot</th>\r\n      <th  className=\"viewScheduleTableHeader\">2nd Slot</th>\r\n      <th  className=\"viewScheduleTableHeader\">3rd Slot</th>\r\n      <th  className=\"viewScheduleTableHeader\">4th Slot</th>\r\n      <th  className=\"viewScheduleTableHeader\">5th Slot</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n      <th  className=\"viewScheduleTableHeader\">Sauturday</th>\r\n      <td className=\"viewScheduleCell\">{(sat1.length>0)?renderSlot(sat1[0].course,sat1[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat2.length>0)?renderSlot(sat2[0].course,sat2[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat3.length>0)?renderSlot(sat3[0].course,sat3[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat4.length>0)?renderSlot(sat4[0].course,sat4[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat5.length>0)?renderSlot(sat5[0].course,sat5[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n      <th  className=\"viewScheduleTableHeader\">Sunday</th>\r\n      <td className=\"viewScheduleCell\">{sun1.length>0?renderSlot(sun1[0].course,sun1[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun2.length>0?renderSlot(sun2[0].course,sun2[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun3.length>0?renderSlot(sun3[0].course,sun3[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun4.length>0?renderSlot(sun4[0].course,sun4[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun5.length>0?renderSlot(sun5[0].course,sun5[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Monday</th>\r\n    <td className=\"viewScheduleCell\">{mon1.length>0?renderSlot(mon1[0].course,mon1[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon2.length>0?renderSlot(mon2[0].course,mon2[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon3.length>0?renderSlot(mon3[0].course,mon3[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon4.length>0?renderSlot(mon4[0].course,mon4[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon5.length>0?renderSlot(mon5[0].course,mon5[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Tuesday</th>\r\n    <td className=\"viewScheduleCell\">{tue1.length>0?renderSlot(tue1[0].course,tue1[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue2.length>0?renderSlot(tue2[0].course,tue2[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue3.length>0?renderSlot(tue3[0].course,tue3[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue4.length>0?renderSlot(tue4[0].course,tue4[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue5.length>0?renderSlot(tue5[0].course,tue5[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Wednesday</th>\r\n    <td className=\"viewScheduleCell\">{wed1.length>0?renderSlot(wed1[0].course,wed1[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed2.length>0?renderSlot(wed2[0].course,wed2[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed3.length>0?renderSlot(wed3[0].course,wed3[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed4.length>0?renderSlot(wed4[0].course,wed4[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed5.length>0?renderSlot(wed5[0].course,wed5[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Thursday</th>\r\n    <td className=\"viewScheduleCell\">{thu1.length>0?renderSlot(thu1[0].course,thu1[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu2.length>0?renderSlot(thu2[0].course,thu2[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu3.length>0?renderSlot(thu3[0].course,thu3[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu4.length>0?renderSlot(thu4[0].course,thu4[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu5.length>0?renderSlot(thu5[0].course,thu5[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Friday</th>\r\n  <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n\r\n\r\n<p className=\"viewScheduleHeaders\">Replacements</p>\r\n<Table striped bordered hover className=\" viewScheduleTable \">\r\n  <thead>\r\n    <tr>\r\n      <th  className=\"viewScheduleTableHeader\">Day</th>\r\n      <th className=\"viewScheduleTableHeader\">1st Slot</th>\r\n      <th className=\"viewScheduleTableHeader\">2nd Slot</th>\r\n      <th className=\"viewScheduleTableHeader\">3rd Slot</th>\r\n      <th  className=\"viewScheduleTableHeader\">4th Slot</th>\r\n      <th  className=\"viewScheduleTableHeader\">5th Slot</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n      <th  className=\"viewScheduleTableHeader\">Sauturday</th>\r\n      <td className=\"viewScheduleCell\">{(sat11.length>0)?renderSlot(sat11[0].course,sat11[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat21.length>0)?renderSlot(sat21[0].course,sat21[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat31.length>0)?renderSlot(sat31[0].course,sat31[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat41.length>0)?renderSlot(sat41[0].course,sat41[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{(sat51.length>0)?renderSlot(sat51[0].course,sat51[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n      <th className=\"viewScheduleTableHeader\">Sunday</th>\r\n      <td className=\"viewScheduleCell\">{sun11.length>0?renderSlot(sun11[0].course,sun11[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun21.length>0?renderSlot(sun21[0].course,sun21[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun31.length>0?renderSlot(sun31[0].course,sun31[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun41.length>0?renderSlot(sun41[0].course,sun41[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{sun51.length>0?renderSlot(sun51[0].course,sun51[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Monday</th>\r\n    <td className=\"viewScheduleCell\">{mon11.length>0?renderSlot(mon11[0].course,mon11[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon21.length>0?renderSlot(mon21[0].course,mon21[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon31.length>0?renderSlot(mon31[0].course,mon31[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon41.length>0?renderSlot(mon41[0].course,mon41[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{mon51.length>0?renderSlot(mon51[0].course,mon51[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Tuesday</th>\r\n    <td className=\"viewScheduleCell\">{tue11.length>0?renderSlot(tue11[0].course,tue11[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue21.length>0?renderSlot(tue21[0].course,tue21[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue31.length>0?renderSlot(tue31[0].course,tue31[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue41.length>0?renderSlot(tue41[0].course,tue41[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{tue51.length>0?renderSlot(tue51[0].course,tue51[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Wednesday</th>\r\n    <td className=\"viewScheduleCell\">{wed11.length>0?renderSlot(wed11[0].course,wed11[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed21.length>0?renderSlot(wed21[0].course,wed21[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed31.length>0?renderSlot(wed31[0].course,wed31[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed41.length>0?renderSlot(wed41[0].course,wed41[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{wed51.length>0?renderSlot(wed51[0].course,wed51[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Thursday</th>\r\n    <td className=\"viewScheduleCell\">{thu11.length>0?renderSlot(thu11[0].course,thu11[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu21.length>0?renderSlot(thu21[0].course,thu21[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu31.length>0?renderSlot(thu31[0].course,thu31[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu41.length>0?renderSlot(thu41[0].course,thu41[0].location):\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{thu51.length>0?renderSlot(thu51[0].course,thu51[0].location):\"Free\"}</td>\r\n    </tr>\r\n    <tr>\r\n    <th  className=\"viewScheduleTableHeader\">Friday</th>\r\n  <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n      <td className=\"viewScheduleCell\">{\"Free\"}</td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\keys_dev.js",[],"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\enums.js",[],"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewSentReplacementRequests.js",["227","228"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ViewSentReplacements(props) {\r\n  const [requests, setRequests] = useState([])\r\n  const [modal, setModal] = useState(false);\r\n  const [error,setError]=useState('')\r\n  const toggle = () => {\r\n      setModal(!modal)\r\n      window.location.reload();\r\n    };\r\n\r\n    const history=useHistory()\r\n\r\n    const logoutClick= async ()=>{\r\n      sessionStorage.removeItem(\"token\")\r\n      await axios({\r\n        url: `${backendLink}/logging/logout`,\r\n        method: 'post',\r\n      }).then((res) => {\r\n          console.log(res)\r\n          \r\n      }).catch((err) => {\r\n          console.log(err.response)\r\n        })\r\n      history.push(\"/\")\r\n    }\r\n  \r\n\r\n  const  viewRequest=(r)=>{\r\n    if(r.status!=\"canceled\"){\r\n   return(\r\n       <div>\r\n               <tr>\r\n                   <td>\r\n                       #\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>To: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                            {r.to}\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Status: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.status} \r\n                   </td>\r\n\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Slot: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.slot} \r\n                   </td>\r\n                   {(r.reason && r.reason!=null)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Reason: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.reason).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n\r\n                   {(r.replacementMembers && r.replacementMembers!=null && r.replacementMembers.length>0)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Replacement Members: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.replacementMembers).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Date Of Request: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                            {JSON.stringify(r.dateOfRequest).substring(1,11)}\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                               <p>Date Submitted: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.dateSubmitted).substring(1,11)} \r\n                   </td>\r\n                   <td>\r\n                   <i className=\"fa fa-close closeIcon\"  onClick={()=>handleCancelRequest(r._id)}></i>\r\n                   </td>\r\n\r\n       </tr>\r\n\r\n\r\n       <Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n       </div>\r\n    \r\n     \r\n   )\r\n\r\n   }\r\n \r\n}\r\n\r\n\r\nconst  handleCancelRequest= async(x)=>{\r\n   \r\n    setModal(!modal)\r\n  await axios({\r\n      url: `${backendLink}/request/cancelRequest`,\r\n      method: 'put',\r\n      headers: {\r\n        // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n        token:sessionStorage.getItem(\"token\")\r\n       },\r\n      data: {\r\n           request:x,\r\n          },\r\n     \r\n    }).then((res) => {\r\n        console.log(res)\r\n        if(res.data.statusCode===1){\r\n            setError(res.data.error)\r\n        }\r\n        else{\r\n            setError(res.data.msg)\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err.response)\r\n      })\r\n\r\n\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect( async () => {\r\n       await axios({\r\n                url: `${backendLink}/request/viewSentReplacementRequest`,\r\n                method: 'get',\r\n                headers: {\r\n                  // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                  token:sessionStorage.getItem(\"token\")\r\n                 },\r\n               \r\n              }).then((res) => {\r\n                  if(res.status===200){\r\n               setRequests(res.data.requests)\r\n               console.log(res.data.requests)\r\n                  }\r\n              }).catch((err) => {\r\n                  console.log(err.response)\r\n                })\r\n              }\r\n              ,[])\r\n\r\n\r\n  return (\r\n      <div>\r\n\r\n        <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n        <i className=\"fa fa-sign-out fa-lg sign-out-ALL\" onClick={logoutClick}></i>\r\n          <p className=\"viewScheduleHeaders\">Requests</p>\r\n          <Table  striped>\r\n           <tbody>\r\n            {\r\n              requests.map((r)=>{\r\n                  return(\r\n                  viewRequest(r)\r\n                  )\r\n              })\r\n          \r\n            } \r\n              </tbody>\r\n       </Table>        \r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewRecievedReplacemetRequest.js",["229"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ViewRecievedReplacements(props) {\r\n  const [requests, setRequests] = useState([])\r\n  const [modal, setModal] = useState(false);\r\n  const [error,setError]=useState('')\r\n  const history=useHistory()\r\n  const toggle = () => {\r\n      setModal(!modal)\r\n      window.location.reload();\r\n    };\r\n\r\n    const logoutClick= async ()=>{\r\n      sessionStorage.removeItem(\"token\")\r\n      await axios({\r\n        url: `${backendLink}/logging/logout`,\r\n        method: 'post',\r\n      }).then((res) => {\r\n          console.log(res)\r\n          \r\n      }).catch((err) => {\r\n          console.log(err.response)\r\n        })\r\n      history.push(\"/\")\r\n    }\r\n  \r\n    \r\nconst  handleAcceptRequest= async(x)=>{\r\n   \r\n    setModal(!modal)\r\n  await axios({\r\n      url: `${backendLink}/request/acceptReplacementRequest`,\r\n      method: 'post',\r\n      headers: {\r\n        // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n        token:sessionStorage.getItem(\"token\")\r\n       },\r\n      data: {\r\n           request:x,\r\n          },\r\n     \r\n    }).then((res) => {\r\n        setError(res.data.msg)\r\n    }).catch((err) => {\r\n        console.log(err.response)\r\n      })\r\n\r\n\r\n     \r\n  }\r\n\r\n\r\n  const  handleRejectRequest= async(x)=>{\r\n   \r\n    setModal(!modal)\r\n  await axios({\r\n      url: `${backendLink}/request/rejectReplacementRequest`,\r\n      method: 'post',\r\n      headers: {\r\n        // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n        token:sessionStorage.getItem(\"token\")\r\n       },\r\n      data: {\r\n           request:x,\r\n          },\r\n     \r\n    }).then((res) => {\r\n       // console.log(res)\r\n       setError(res.data.msg)\r\n    }).catch((err) => {\r\n        console.log(err.response)\r\n      })\r\n\r\n\r\n     \r\n  }\r\n\r\n\r\n  const  viewRequest=(r)=>{\r\n   return(\r\n       <div>\r\n               <tr>\r\n                   <td>\r\n                       #\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>From: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                            {r.from}\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Status: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.status} \r\n                   </td>\r\n\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Slot: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.slot} \r\n                   </td>\r\n                   {(r.reason && r.reason!=null)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Reason: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.reason).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Date Of Request: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                            {r.dateOfRequest}\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                               <p>Date Submitted: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                             {r.dateSubmitted}\r\n                   </td>\r\n\r\n                   <td>\r\n                   <i className=\"fa fa-close closeIcon\" onClick={()=>handleRejectRequest(r._id)}></i>\r\n                   <i className=\"fa fa-check checkIcon\" onClick={()=>handleAcceptRequest(r._id)}></i>\r\n\r\n                   </td>\r\n\r\n       </tr>\r\n\r\n\r\n       <Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>NOTE</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n       </div>\r\n    \r\n     \r\n   )\r\n\r\n   }\r\n \r\n\r\n  useEffect( async () => {\r\n       await axios({\r\n                url: `${backendLink}/request/viewRecievedReplacementRequest`,\r\n                method: 'get',\r\n                headers: {\r\n                  // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                  token:sessionStorage.getItem(\"token\")\r\n                 },\r\n               \r\n              }).then((res) => {\r\n                  if(res.status===200){\r\n               setRequests(res.data.requests)\r\n              // console.log(res.data.requests)\r\n                  }\r\n              }).catch((err) => {\r\n                  console.log(err.response)\r\n                })\r\n              }\r\n              ,[])\r\n\r\n  return (\r\n      <div>\r\n\r\n        <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n        <i className=\"fa fa-sign-out fa-lg sign-out-ALL\" onClick={logoutClick}></i>\r\n          <p className=\"viewScheduleHeaders\">Requests</p>\r\n          <Table  striped>\r\n           <tbody>\r\n            {\r\n              requests.map((r)=>{\r\n                  return(\r\n                  viewRequest(r)\r\n                  )\r\n              })\r\n          \r\n            } \r\n              </tbody>\r\n       </Table>        \r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewAllRequests.js",["230","231","232","233","234","235","236"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ViewAllRequests(props) {\r\n  const [requests, setRequests] = useState([])\r\n  const [accepted, setAccepted] = useState([])\r\n  const [rejected, setRejected] = useState([])\r\n  const [pending, setPending] = useState([])\r\n\r\n  const [filter, setFilter] = useState('')\r\n  const [modal, setModal] = useState(false);\r\n  const [error,setError]=useState('')\r\n  const history=useHistory()\r\n  const toggle = () => {\r\n      setModal(!modal)\r\n      window.location.reload();\r\n    };\r\n\r\n    const logoutClick= async ()=>{\r\n      sessionStorage.removeItem(\"token\")\r\n      await axios({\r\n        url: `${backendLink}/logging/logout`,\r\n        method: 'post',\r\n      }).then((res) => {\r\n          console.log(res)\r\n          \r\n      }).catch((err) => {\r\n          console.log(err.response)\r\n        })\r\n      history.push(\"/\")\r\n    }\r\n  \r\n\r\n    const filterAccepted=()=>{\r\n       // console.log(\"heyyyyyyyyyy\")\r\n       if(filter==='acc'){\r\n                setFilter('')\r\n       }\r\n       else{\r\n        setFilter('acc')\r\n       }\r\n        var x=requests.filter((r)=>{\r\n            if(r.status===\"accepted\"){\r\n                return r\r\n            }\r\n        })\r\n\r\n        setAccepted(x)\r\n\r\n    //    window.location.reload();\r\n    }\r\n\r\n    const filterPending=()=>{\r\n        if(filter==='pend'){\r\n            setFilter('')\r\n   }\r\n   else{\r\n    setFilter('pend')\r\n   }\r\n        var x=requests.filter((r)=>{\r\n            if(r.status===\"pending\"){\r\n                return r\r\n            }\r\n        })\r\n\r\n        setPending(x)\r\n    }\r\n\r\n    const filterRejected=()=>{\r\n        if(filter==='rej'){\r\n            setFilter('')\r\n   }\r\n   else{\r\n    setFilter('rej')\r\n   }\r\n        var x=requests.filter((r)=>{\r\n            if(r.status===\"rejected\"){\r\n                return r\r\n            }\r\n        })\r\n\r\n        setRejected(x)\r\n    }\r\n\r\n    \r\n\r\n    \r\n    const  handleCancelRequest= async(x)=>{\r\n   \r\n        setModal(!modal)\r\n      await axios({\r\n          url: `${backendLink}/request/cancelRequest`,\r\n          method: 'put',\r\n          headers: {\r\n            // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            token:sessionStorage.getItem(\"token\")\r\n           },\r\n          data: {\r\n               request:x,\r\n              },\r\n         \r\n        }).then((res) => {\r\n            console.log(res)\r\n            if(res.data.statusCode===1){\r\n                setError(res.data.error)\r\n            }\r\n            else{\r\n                setError(res.data.msg)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n    \r\n    \r\n         \r\n      }\r\n    \r\n\r\n  const  viewRequest=(r)=>{\r\n    console.log(\"reqqqqqqq\")\r\n    console.log(r)\r\n    //console.log(r.dateOfRequest)\r\n    \r\n   return(\r\n       <div>\r\n               <tr >\r\n                   <td>\r\n                       #\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>To: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                            {r.to}\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Status: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.status} \r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Type: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.type} \r\n                   </td>\r\n                   {(r.reason && r.reason!=null)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Reason: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.reason).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n\r\n                   {(r.dayOff && r.dayOff!=null)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Day Off: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.dayOff).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n\r\n                   {(r.replacementMembers && r.replacementMembers!=null && r.replacementMembers.length>0)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Replacement Members: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.replacementMembers).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n\r\n                   {(r.compensationDay && r.compensationDay!=null)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Compensation Day: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.compensationDay).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n\r\n                   {(r.dateOfRequest && r.dateOfRequest!=null)?<><td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Date Of Request: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.dateOfRequest).substring(1,11)}\r\n                   </td></>:(<></>)}\r\n                   \r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                               <p>Date Submitted: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                   {JSON.stringify(r.dateSubmitted).substring(1,11)}\r\n                   </td>\r\n                   <td>\r\n                   <i className=\"fa fa-close closeIcon\" onClick={()=>handleCancelRequest(r._id)}></i>\r\n                   </td>\r\n\r\n       </tr>\r\n\r\n\r\n       <Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n       </div>\r\n    \r\n     \r\n   )\r\n\r\n   }\r\n\r\n   var reqClone=requests;\r\n   if(filter=='acc'){\r\n       reqClone=accepted\r\n   }\r\n   if(filter=='pend'){\r\n    reqClone=pending\r\n}\r\nif(filter=='rej'){\r\n    reqClone=rejected\r\n}\r\n\r\n \r\n\r\n\r\n  useEffect( async () => {\r\n       await axios({\r\n                url: `${backendLink}/request/viewAllSubmittedRequests`,\r\n                method: 'get',\r\n                headers: {\r\n                  // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                  token:sessionStorage.getItem(\"token\")\r\n                 },\r\n              }).then((res) => {\r\n                setRequests(res.data.requests)\r\n              }).catch((err) => {\r\n                  console.log(err.response)\r\n                })\r\n              }\r\n              ,[])\r\n\r\n\r\n  return (\r\n      <div style={{width:\"100vw\"}}>\r\n\r\n        <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n        <i className=\"fa fa-sign-out fa-lg sign-out-ALL\" onClick={logoutClick}></i>\r\n          <p className=\"viewScheduleHeaders\">Requests</p>\r\n          <div>\r\n      <Button  className=\"filterButton\"   onClick={()=>filterAccepted()}>Filter Accepted</Button>\r\n      <Button   className=\"filterButton\"  onClick={()=>filterPending()}>Filter Pending</Button>\r\n      <Button  className=\"filterButton\"   onClick={()=>filterRejected()}>Filter Rejected</Button>\r\n    </div>\r\n\r\n          <Table  striped className=\"viewAllRequestsTable\">\r\n           <tbody>\r\n               \r\n               \r\n            {\r\n              reqClone.map((r)=>{\r\n                  return(\r\n                  viewRequest(r)\r\n                  )\r\n              })\r\n          \r\n            } \r\n              </tbody>\r\n       </Table>        \r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendReplacementModal.js",["237","238","239","240"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\nvar success=0;\r\n\r\n\r\n\r\nexport default function SendReplacementRequest(props) {\r\n\r\n \r\n\r\n  \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    slot: '',\r\n    member: '',\r\n    reason: '',\r\n    date:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    // setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      slot: '',\r\n      member: '',\r\n      reason: '',\r\n      date:'',\r\n     })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n      console.log(\"toggle2\")\r\n      console.log(success)\r\n       setModal(!modal)\r\n       if(success===1){\r\n         console.log(\"yaay\")\r\n       props.setShow(!props.show)\r\n       setState({\r\n        slot: '',\r\n        member: '',\r\n        reason: '',\r\n        date:'',\r\n       })\r\n       }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n      \r\n        await axios({\r\n            url: `${backendLink}/request/sendReplacementRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   to:state.member,\r\n                   slot:state.slot,\r\n                   reason:state.reason,\r\n                   dateOfRequest:state.date\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n             console.log(\"tatata\")\r\n              if(res.data.statusCode===2 || res.data.statusCode===1){\r\n                success=0\r\n                  console.log(\"gwa iff\")\r\n                  console.log(res)\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                console.log(\"successsssssss\")\r\n                success=1\r\n                  setError(res.data.msg)\r\n                  \r\n              }\r\n              \r\n          }).catch((err) => {\r\n            console.log(\"errrrrrooooooor\")\r\n            console.log(err)\r\n              console.log(err.response)\r\n            })\r\n\r\n            // if(success==1){\r\n            //   props.setShow(!props.show)\r\n            // }\r\n\r\n           // props.setShow(!props.show)\r\n\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n   \r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Replacemet Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">To *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='member'  onChange={handleChange} placeholder=\"Id of academic member you want to replace with \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Slot Id *</Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='slot' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Request * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='date'  onChange={handleChange} placeholder=\"date of the request \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Replacement</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendSlotLinkingModal.js",["241","242","243","244"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\n\r\nvar success=0;\r\n\r\n\r\nexport default function SendSlotLinking(props) {\r\n\r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    slot: '',\r\n    reason: '',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      slot: '',\r\n     reason: '',\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          slot: '',\r\n         reason: '',\r\n        })\r\n\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/sendSlotLinkingRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   slot:state.slot,\r\n                   reason:state.reason,\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode===2 || res.data.statusCode===1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                  success=1;\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Slot Linking Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Slot Id *</Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='slot' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Replacement</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendChangeDayOff.js",["245","246","247","248","249","250"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\nvar success=0;\r\n\r\n\r\n\r\nexport default function SendChangeDayOffRequest(props) {\r\n \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    reason: '',\r\n    day:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      reason: '',\r\n      day:'',\r\n\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n         console.log(\"toggle 2 success 1\")\r\n         console.log(success)\r\n        props.setShow(!props.show)\r\n        setState({\r\n          reason: '',\r\n          day:'',\r\n\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/sendChangeDayOffRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   reason:state.reason,\r\n                   day:state.day\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  console.log(\"gwa iff\")\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1;\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Change Day Off Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Day *</Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='day' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Change</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendMetrinityLeaveModal.js",["251","252","253","254","255","256"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\n\r\n\r\n\r\nvar success=0;\r\nexport default function SendMetrinityLeave(props) {\r\n  \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    documents:'',\r\n    reason:'',\r\n    date:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      documents:'',\r\n      reason:'',\r\n      date:'',\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          documents:'',\r\n          reason:'',\r\n          date:'',\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/sendMaternityLeaveRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   date:state.date,\r\n                   documents:state.documents,\r\n                   reason:state.reason,\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                  success=1;\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}  className=\"sendReplacementButton\">Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Metrinity Leave Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n \r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Request * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='date'  onChange={handleChange} placeholder=\"date of the request \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Documents Drive Link*</Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='documents' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Leave</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendSickLeave.js",["257","258","259","260","261","262"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\n\r\nvar success=0\r\n\r\n\r\nexport default function SendSickLeave(props) {\r\n \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    documents:'',\r\n    reason:'',\r\n    date:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      documents:'',\r\n      reason:'',\r\n      date:'',\r\n\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       console.log(\"toggle 2 success\")\r\n       console.log(success)\r\n       if(success===1){\r\n         console.log(\"dih elet adaab\")\r\n        props.setShow(!props.show)\r\n        setState({\r\n          documents:'',\r\n          reason:'',\r\n          date:'',\r\n\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/sendSickLeaveRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   date:state.date,\r\n                   documents:state.documents,\r\n                   reason:state.reason,\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1;\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}  className=\"sendReplacementButton\">Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Sick Leave Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n \r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Request * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='date'  onChange={handleChange} placeholder=\"date of the request \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Documents Drive Link*</Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='documents' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Leave</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendCompensationLeaveModal.js",["263","264","265","266","267","268"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\nvar success=0;\r\n\r\n\r\n\r\nexport default function SendReplacementRequest(props) {\r\n \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    compensationDay:'',\r\n    reason: '',\r\n    date:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      compensationDay:'',\r\n      reason: '',\r\n      date:'',\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          compensationDay:'',\r\n          reason: '',\r\n          date:'',\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n        console.log(\"compensations\")\r\n        console.log(state.compensationDay)\r\n        await axios({\r\n            url: `${backendLink}/request/sendCompensationLeaveRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                  compensationDay:state.compensationDay,\r\n                   reason:state.reason,\r\n                   date:state.date\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  console.log(\"gwa iff\")\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1;\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Compensation Leave Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Request * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='date'  onChange={handleChange} placeholder=\"date of the request \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Compensation * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='compensationDay'  onChange={handleChange} placeholder=\"date you will compensate on \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Leave *</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Write strong reason for request to be accepted\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendAccidentalLeaveModal.js",["269","270","271","272","273","274"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\nvar success=0\r\n\r\n\r\n\r\n\r\nexport default function SendAccidentalLeave(props) {\r\n  \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    reason:'',\r\n    date:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      reason:'',\r\n      date:'',\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          reason:'',\r\n          date:'',\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/sendAccidentalLeaveRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   date:state.date,\r\n                   reason:state.reason,\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}  className=\"sendReplacementButton\">Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Accidental Leave Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n \r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Request * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='date'  onChange={handleChange} placeholder=\"date of the request \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Leave</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\sendAnnualLeaveModal.js",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\n\r\nvar mem1=\"\"\r\n var mem2=\"\"\r\n  var mem3=\"\"\r\n  var mem4=\"\"\r\n  var mem5=\"\"\r\n  var req1=\"\"\r\n var req2=\"\"\r\n  var req3=\"\"\r\n  var req4=\"\"\r\n  var req5=\"\"\r\n\r\n  var globalReplacements=[]\r\n  var globalRequests=[]\r\n  function setReplacementsg(){\r\n    if(mem1!=\"\"){\r\n      globalReplacements[0]=mem1\r\n    }\r\n    if(mem2!=\"\"){\r\n      globalReplacements[1]=mem2\r\n    }\r\n    if(mem3!=\"\"){\r\n      globalReplacements[2]=mem3\r\n    }\r\n    if(mem4!=\"\"){\r\n      globalReplacements[3]=mem4\r\n    }\r\n    if(mem5!=\"\"){\r\n      globalReplacements[4]=mem5\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  function setRequestsg(){\r\n    if(req1!=\"\"){\r\n      globalRequests[0]=req1\r\n    }\r\n    if(req2!=\"\"){\r\n      globalRequests[1]=req2\r\n    }\r\n    if(req3!=\"\"){\r\n      globalRequests[2]=req3\r\n    }\r\n    if(req4!=\"\"){\r\n      globalRequests[3]=req4\r\n    }\r\n    if(req5!=\"\"){\r\n      globalRequests[4]=req5\r\n    }\r\n  \r\n  }\r\nvar success=0;\r\nexport default function SendAnnualLeave(props){\r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    reason:'',\r\n    date:''\r\n  })\r\n  const [requests,setRequests]=useState([])\r\n  const [replacements,setReplacements]=useState([])\r\n\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      if(name==='replacements1'){\r\n        mem1=newValue\r\n      }\r\n      if(name==='replacements2'){\r\n        mem2=newValue\r\n      }\r\n      if(name==='replacements3'){\r\n        mem3=newValue\r\n      }\r\n      if(name==='replacements4'){\r\n        mem4=newValue\r\n      }\r\n      if(name==='replacements5'){\r\n        mem5=newValue\r\n      }\r\n      if(name==='requests1'){\r\n        req1=newValue\r\n      }\r\n      if(name==='requests2'){\r\n        req2=newValue\r\n      }\r\n      if(name==='requests3'){\r\n        req3=newValue\r\n      }\r\n      if(name==='requests4'){\r\n        req4=newValue\r\n      }\r\n      if(name==='requests5'){\r\n        req5=newValue\r\n      }\r\n      setReplacementsg()\r\n      setRequestsg()\r\n      setReplacements(globalReplacements)\r\n      setRequests(globalRequests)\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  \r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      reason:'',\r\n      date:'',\r\n    })\r\n    setReplacements([])\r\n    setRequests([])\r\n    var mem1=\"\"\r\n  mem2=\"\"\r\n   mem3=\"\"\r\n   mem4=\"\"\r\n   mem5=\"\"\r\n   req1=\"\"\r\n  req2=\"\"\r\n req3=\"\"\r\n   req4=\"\"\r\n req5=\"\"\r\n\r\n   globalReplacements=[5]\r\n   globalRequests=[5]\r\n    props.setShow(!props.show)\r\n    }\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          reason:'',\r\n          date:'',\r\n        })\r\n        setReplacements([])\r\n    setRequests([])\r\n    var mem1=\"\"\r\n  mem2=\"\"\r\n   mem3=\"\"\r\n   mem4=\"\"\r\n   mem5=\"\"\r\n   req1=\"\"\r\n  req2=\"\"\r\n req3=\"\"\r\n   req4=\"\"\r\n req5=\"\"\r\n\r\n   globalReplacements=[5]\r\n   globalRequests=[5]\r\n      \r\n        }\r\n        }\r\n\r\n    const handleSubmit= async ()=>{\r\n     \r\n      \r\n     \r\n      setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/sendAnnualLeaveRequest`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   date:state.date,\r\n                   reason:state.reason,\r\n                   replacements:replacements,\r\n                   requests:requests\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode===2 || res.data.statusCode===1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}  className=\"sendReplacementButton\">Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Send Annual Leave Request</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n \r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Date Of Request * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='date'  onChange={handleChange} placeholder=\"date of the request \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Replacement Memmbers  </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='replacements1'  onChange={handleChange} placeholder=\"Member 1 ID\" />\r\n    <Input  className=\"sendReplacementInput\"  name='replacements2'  onChange={handleChange} placeholder=\"Member 2 ID\" />\r\n    <Input  className=\"sendReplacementInput\"  name='replacements3'  onChange={handleChange} placeholder=\"Member 3 ID \" />\r\n    <Input  className=\"sendReplacementInput\"  name='replacements4'  onChange={handleChange} placeholder=\"Member 4 ID \" />\r\n    <Input  className=\"sendReplacementInput\"  name='replacements5'  onChange={handleChange} placeholder=\"Member 5 ID \" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Request ID's  </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='requests1'  onChange={handleChange} placeholder=\"Request 1 ID \" />\r\n    <Input  className=\"sendReplacementInput\"  name='requests2'  onChange={handleChange} placeholder=\"Request 2 ID \" />\r\n    <Input  className=\"sendReplacementInput\"  name='requests3'  onChange={handleChange} placeholder=\"Request 3 ID \" />\r\n    <Input  className=\"sendReplacementInput\"  name='requests4'  onChange={handleChange} placeholder=\"Request 4 ID \" />\r\n    <Input  className=\"sendReplacementInput\"  name='requests5'  onChange={handleChange} placeholder=\"Request 5 ID \" />\r\n  </FormGroup>\r\n\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Reason For Leave</Label>\r\n    <Input className=\"sendReplacementTextInput\" type=\"textarea\" placeholder=\"Optional Reason\" name='reason'  onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewSlotLinkingRequests.js",["291","292","293","294","295","296","297"],"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\addSlotModal.js",["298","299","300","301","302","303"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\nvar success=0\r\n\r\n\r\n\r\n\r\nexport default function AddSlot(props) {\r\n\r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    start: '',\r\n    end: '',\r\n    day: '',\r\n    location:'',\r\n    order:'',\r\n    course:''\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      start: '',\r\n      end: '',\r\n      day: '',\r\n      location:'',\r\n      order:'',\r\n      course:''\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          start: '',\r\n          end: '',\r\n          day: '',\r\n          location:'',\r\n          order:'',\r\n          course:''\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        console.log(\"state\")\r\n        console.log(state.start)\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/addSlot`,\r\n            method: 'post',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   startTime:state.start,\r\n                   endTime:state.end,\r\n                   course:state.course,\r\n                   day:state.day,\r\n                   order:state.order,\r\n                   location:state.location\r\n\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n             // console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Add Slot</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Start Time *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='start'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">End Time *</Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='end' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Order * </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='order'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Location *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='location'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Day *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='day'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Course *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='course'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\updateSlotModal.js",["304","305","306","307","308","309","310","311","312","313","314"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\nimport { stat } from 'fs';\r\nimport { date } from 'joi';\r\nconst queryString=require('querystring')\r\nlet data={} \r\n\r\n\r\n\r\n\r\nvar success=0\r\n\r\nexport default function UpdateSlot(props) {\r\n  \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    start: '',\r\n    end: '',\r\n    day: '',\r\n    location:'',\r\n    order:'',\r\n    slot:'',\r\n    academic:''\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n   \r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      start: '',\r\n      end: '',\r\n      day: '',\r\n      location:'',\r\n      order:'',\r\n      slot:'',\r\n      academic:''\r\n    })\r\n    console.log(\"main toggle\")\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n      console.log(\"toggle2\")\r\n      console.log(success)\r\n      setModal(!modal)\r\n       if(success==1){\r\n         console.log(\"heeeh\")\r\n        props.setShow(false)\r\n        setState({\r\n          start: '',\r\n          end: '',\r\n          day: '',\r\n          location:'',\r\n          order:'',\r\n          slot:'',\r\n          academic:''\r\n        })\r\n        }\r\n        };\r\n        \r\n    const handleSubmit= async ()=>{\r\n        console.log(\"state\")\r\n        console.log(state.start)\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/updateSlot`,\r\n            method: 'put',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   startTime:state.start,\r\n                   endTime:state.end,\r\n                   slot:state.slot,\r\n                   day:state.day,\r\n                   order:state.order,\r\n                   location:state.location,\r\n                   academicMember:state.academic\r\n\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n             // console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1;\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Update Slot</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n<FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Slot ID *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='slot'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Start Time </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='start'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">End Time </Label>\r\n    <Input  className=\"sendReplacementInput\"  onChange={handleChange} name='end' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Order  </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='order'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Location </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='location'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Day </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='day'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Academic Member </Label>\r\n    <Input  className=\"sendReplacementInput\"  name='academic'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Components\\Rokaya\\deleteSlotModal.js",["315","316","317","318","319","320"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\n\r\n\r\nvar success=0\r\n\r\n\r\n\r\nexport default function DeleteSlot(props) {\r\n  \r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n   slot:'',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n  const toggle = () => {\r\n    setError('')\r\n    setState({\r\n      slot:'',\r\n    })\r\n    props.setShow(!props.show)\r\n    };\r\n\r\n    const toggle2 = () => {\r\n       setModal(!modal)\r\n       if(success===1){\r\n        props.setShow(!props.show)\r\n        setState({\r\n          slot:'',\r\n        })\r\n        }\r\n        };\r\n\r\n    const handleSubmit= async ()=>{\r\n        console.log(\"state\")\r\n        console.log(state.start)\r\n        setModal(!modal)\r\n        await axios({\r\n            url: `${backendLink}/request/deleteSlot`,\r\n            method: 'delete',\r\n            headers: {\r\n              token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   slot:state.slot\r\n\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n             // console.log(res)\r\n              if(res.data.statusCode==2 || res.data.statusCode==1){\r\n                success=0\r\n                  setError(res.data.error)\r\n\r\n              }\r\n              else{\r\n                success=1\r\n                  setError(res.data.msg)\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n\r\n  return (\r\n      <div>\r\n  <Modal isOpen={modal} toggle={toggle2}>\r\n    <ModalHeader toggle={toggle2}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle2}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Modal  isOpen={props.show} toggle={toggle} className=\"sendReplacementModal\">\r\n<ModalHeader toggle={toggle} className=\"sendReplacementHeaderFont\">Delete Slot</ModalHeader>\r\n<ModalBody>\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"exampleEmail\" className=\"sendReplacementTitleFont\">Slot Id *</Label>\r\n    <Input  className=\"sendReplacementInput\"  name='slot'  onChange={handleChange} placeholder=\"\" />\r\n  </FormGroup>\r\n  \r\n   \r\n</Form>\r\n<Button color=\"primary\" onClick={handleSubmit} className=\"sendReplacementButton\" >Submit</Button>\r\n</ModalBody>\r\n{/* <ModalFooter>\r\n     \r\n    </ModalFooter> */}\r\n</Modal>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\viewNotifications.js",["321","322","323","324","325","326","327","328","329"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ViewNotifications(props) {\r\n  const [notification, setNotification] = useState([])\r\n  const [modal, setModal] = useState(false);\r\n  const [error,setError]=useState('')\r\n  const toggle = () => {\r\n      setModal(!modal)\r\n      window.location.reload();\r\n    };\r\n\r\n    const history=useHistory()\r\n\r\n\r\n    const logoutClick= async ()=>{\r\n      sessionStorage.removeItem(\"token\")\r\n      await axios({\r\n        url: `${backendLink}/logging/logout`,\r\n        method: 'post',\r\n      }).then((res) => {\r\n          console.log(res)\r\n          \r\n      }).catch((err) => {\r\n          console.log(err.response)\r\n        })\r\n      history.push(\"/\")\r\n    }\r\n  \r\n\r\n  const  viewRequest=(r)=>{\r\n   return(\r\n       <div>\r\n               <tr>\r\n                   <td>\r\n                       #\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                          <p>Request ID: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                            {r.request}\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextTitle\">\r\n                            <p>Message: </p>\r\n                   </td>\r\n                   <td className=\"viewSentReplacementRequestTextData\">\r\n                           {r.message} \r\n                   </td>\r\n                   \r\n       </tr>\r\n\r\n       </div>\r\n    \r\n     \r\n   )\r\n\r\n   }\r\n \r\n\r\n  useEffect( async () => {\r\n       await axios({\r\n                url: `${backendLink}/request/viewNotifications`,\r\n                method: 'get',\r\n                headers: {\r\n                  // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                  token:sessionStorage.getItem(\"token\")\r\n                 },\r\n               \r\n              }).then((res) => {\r\n                  if(res.status===200){\r\n               setNotification(res.data.notifications)\r\n              // console.log(res.data.requests)\r\n                  }\r\n              }).catch((err) => {\r\n                  console.log(err.response)\r\n                })\r\n              }\r\n              ,[])\r\n\r\n  return (\r\n      <div>\r\n\r\n        <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n        <i className=\"fa fa-sign-out fa-lg sign-out-ALL\" onClick={logoutClick}></i>\r\n          <p className=\"viewScheduleHeaders\">Notifications</p>\r\n          <Table  striped>\r\n           <tbody>\r\n            {\r\n              notification.map((r)=>{\r\n                  return(\r\n                  viewRequest(r)\r\n                  )\r\n              })\r\n          \r\n            } \r\n              </tbody>\r\n       </Table>        \r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\login.js",["330","331","332","333"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button, Card} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\nvar success=0;\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    pass: '',\r\n  })\r\n  const history = useHistory()\r\n  const toggle = () => {\r\n    setModal(!modal)\r\n    window.location.reload();\r\n  };\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n \r\n\r\n    const handleSubmit= async ()=>{\r\n        if(success!=1){\r\n            setModal(!modal)\r\n        }\r\n        \r\n        await axios({\r\n            url: `${backendLink}/logging/login`,\r\n            method: 'post',\r\n            data:{\r\n                   email:state.email,\r\n                   password:state.pass,\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode===2 || res.data.statusCode===1){\r\n                success=0\r\n                  setError(res.data.error)\r\n                  setModal(!modal)\r\n\r\n              }\r\n              else{\r\n                  if(res.data.statusCode===5){\r\n                      success=1;\r\n                    history.push('/changePassword')\r\n                    sessionStorage.setItem(\"token\",res.data.token)\r\n                  }\r\n                  else{\r\n                  success=1;\r\n                  sessionStorage.setItem(\"token\",res.data.token)\r\n                  setError(res.data.msg)\r\n                  history.push('/home')\r\n                  }\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n        // await axios({\r\n        //          url: `${backendLink}/logging/viewAcademic`,\r\n        //          method: 'get',\r\n        //          data:{\r\n        //              id:\r\n        //          }\r\n                \r\n        //        }).then((res) => {\r\n        //          setRequests(res.data.requests)\r\n        //        }).catch((err) => {\r\n        //            console.log(err.response)\r\n        //          })\r\n        //        }\r\n \r\n\r\n  return (\r\n      <div>\r\n           <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n\r\n<Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Card className=\"loginCard\">\r\n<Form>\r\n  <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Email *</Label>\r\n    <Input  className=\"loginInput\"  onChange={handleChange} name='email' />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">Password *</Label>\r\n    <Input className=\"loginInput\"  name='pass'  type=\"password\" onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n  <Button color=\"primary\" onClick={handleSubmit} className=\"loginButton\" >Login</Button>\r\n</Form>\r\n</Card>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Rokaya\\changePassword.js",["334","335","336","337"],"import React,{useEffect,useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../Images/GUC.png'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button, Card, CardHeader} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {backendLink} from '../../keys_dev'\r\nimport {FormGroup,Input,Label,Form,FormText} from 'reactstrap'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\nvar success=0;\r\n\r\n\r\nexport default function ChangePassword(props) {\r\n\r\n  const [error,setError]=useState('')\r\n  const [modal,setModal]=useState(false)\r\n  const [state, setState] = useState({\r\n    old: '',\r\n    pass: '',\r\n  })\r\n  const history = useHistory()\r\n  const toggle = () => {\r\n    setModal(!modal)\r\n    window.location.reload();\r\n  };\r\n  const handleChange = (event) => {\r\n    let newValue = event.target.value\r\n    let name = event.target.name\r\n    setError('')\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: newValue,\r\n      }\r\n    })\r\n  }\r\n \r\n\r\n    const handleSubmit= async ()=>{\r\n            setModal(!modal)\r\n            console.log(sessionStorage.getItem(\"token\"))\r\n        \r\n        await axios({\r\n            url: `${backendLink}/staff/resetPassword`,\r\n            method: 'put',\r\n            headers: {\r\n                token:sessionStorage.getItem(\"token\")\r\n                //  token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            },\r\n            data:{\r\n                   password:state.pass,\r\n            },\r\n\r\n           \r\n          }).then((res) => {\r\n              console.log(res)\r\n              if(res.data.statusCode===2 || res.data.statusCode===1){\r\n                success=0\r\n                  setError(res.data.error)\r\n                  setModal(!modal)\r\n\r\n              }\r\n              else{\r\n                  success=1;\r\n                  setError(res.data.msg)\r\n                  history.push('/home')\r\n              }\r\n              \r\n          }).catch((err) => {\r\n              console.log(err.response)\r\n            })\r\n\r\n    }\r\n        // await axios({\r\n        //          url: `${backendLink}/logging/viewAcademic`,\r\n        //          method: 'get',\r\n        //          data:{\r\n        //              id:\r\n        //          }\r\n                \r\n        //        }).then((res) => {\r\n        //          setRequests(res.data.requests)\r\n        //        }).catch((err) => {\r\n        //            console.log(err.response)\r\n        //          })\r\n        //        }\r\n \r\n\r\n  return (\r\n      <div>\r\n           <img className=\"viewScheduleLogo\" src={logo} alt=\"Logo\" />\r\n\r\n<Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>Take Care</ModalHeader>\r\n    <ModalBody>\r\n    {/* {JSON.stringify(error).substring(1,error.length-1)} */}\r\n    {error}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button color=\"primary\" onClick={toggle}>Ok</Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n<Card className=\"loginCard\">\r\n    <CardHeader className=\"viewScheduleHeaders\">\r\n        Change Password\r\n    </CardHeader>\r\n<Form>\r\n  {/* <FormGroup>\r\n    <Label for=\"examplePassword\" className=\"sendReplacementTitleFont\">Old Password *</Label>\r\n    <Input  className=\"loginInput\"  type=\"password\" onChange={handleChange} name='old' />\r\n  </FormGroup> */}\r\n  <FormGroup>\r\n    <Label for=\"exampleText\" className=\"sendReplacementTitleFont\">New Password *</Label>\r\n    <Input className=\"loginInput\"  name='pass'  type=\"password\" onChange={handleChange}/>\r\n  </FormGroup>\r\n  \r\n  <Button color=\"primary\" onClick={handleSubmit} className=\"loginButton\" >Change</Button>\r\n</Form>\r\n</Card>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageCourses.js",["338"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form,Table } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState, useEffect } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nexport default function ManageCourses(props) {\r\n    const [courseCoverage, setCourseCoverage] = useState([]);\r\n    const [slots, setSlots] = useState([]);\r\n    const [courseName, setCourseName] = useState('');\r\n    const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n        sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n    useEffect(() => {\r\n        async function fetchMyData() {\r\n            await getCoverage();\r\n           \r\n        }\r\n        fetchMyData();\r\n     },[])\r\n    async function getCoverage() {\r\n        await axios({\r\n            url: `${backendLink}/HOD/courseCoverage`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setCourseCoverage(res.data);\r\n            }\r\n            \r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response);\r\n        })\r\n    }\r\n\r\n    \r\n    async function getSlots() {\r\n        await axios({\r\n            url: `${backendLink}/HOD/teachingAssignmentsOfCourse`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                courseName: courseName\r\n            }\r\n        }).then((res) => {\r\n           if(!res.data.error)\r\n            setSlots(res.data);\r\n           \r\n        }).catch((err) => {\r\n      \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main-container\">\r\n             <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n            <h2>Courses Coverage</h2>\r\n        <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>#</th>\r\n            <th>Course</th>\r\n            <th>Coverage</th>\r\n           \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                courseCoverage.map((c, i) => {\r\n                    return (\r\n                        <tr key={i+1}>\r\n                        <td>{i+1}</td>\r\n                        <td>{c.Course}</td>\r\n                        <td>{c.Coverage}</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }  \r\n           \r\n        </tbody>\r\n            </Table>\r\n            <h2>Slots Assignments</h2>\r\n            <Form>\r\n          \r\n          <Form.Group >\r\n            <Form.Label>Course name</Form.Label>\r\n            <Form.Control onChange={(event)=>setCourseName(event.target.value)} placeholder=\"Enter course name\" />\r\n        </Form.Group>                \r\n        </Form>\r\n                \r\n          <Button variant=\"primary\" onClick={getSlots} >\r\n                Show Assignments\r\n          </Button>\r\n    <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>#</th>\r\n            <th>Member</th>\r\n            <th>Order</th>\r\n            <th>Day</th>\r\n            <th>Course</th>\r\n            <th>Location</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                slots.map((c, i) => {\r\n                    return (\r\n                        <tr key={i+1}>\r\n                        <td>{i+1}</td>\r\n                        <td>{c.academicMember}</td>\r\n                        <td>{c.order}</td>\r\n                        <td>{c.day}</td>\r\n                        <td>{c.course}</td>\r\n                        <td>{c.location}</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }  \r\n           \r\n        </tbody>\r\n    </Table>\r\n        </div>\r\n    );\r\n\r\n}","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageInstructors.js",["339","340"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Alert } from 'reactstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nexport default function ManageInstructors(props) {\r\n  const [instructorID, setInstructorID] = useState('');\r\n  const [courseName, setCourseName] = useState('');\r\n  const [courseName2, setCourseName2] = useState('');\r\n  const [newCourseName, setNewCourseName] = useState('');\r\n  const [show, setShow] = useState(true);\r\n  const [alertResponse, setAlertResponse] = useState('');\r\n  const [alertResponse2, setAlertResponse2] = useState('');\r\n  const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n      sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n  async function makeInstructor() {\r\n    await axios({\r\n      url: `${backendLink}/HOD/makeInstructor`,\r\n      method: 'post',\r\n      headers: {\r\n        // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n        token:sessionStorage.getItem(\"token\")\r\n       },\r\n      data: {\r\n        academicID: instructorID,\r\n        courseName:courseName\r\n          },\r\n     \r\n    }).then((res) => {\r\n      if (!res.data.error) {\r\n        setAlertResponse(JSON.stringify(res.data));\r\n        console.log(alertResponse);\r\n      }\r\n      setShow(true);\r\n    }).catch((err) => {\r\n      \r\n        console.log(err.response)\r\n      })\r\n  }\r\n  async function deleteInstructor() {\r\n    await axios({\r\n      url: `${backendLink}/HOD/deleteInstructor`,\r\n      method: 'post',\r\n      headers: {\r\n        // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n        token:sessionStorage.getItem(\"token\")\r\n       },\r\n      data: {\r\n        academicID: instructorID,\r\n        courseName:courseName\r\n          },\r\n     \r\n    }).then((res) => {\r\n      if (!res.data.error) {\r\n        setAlertResponse(JSON.stringify(res.data));\r\n        console.log(alertResponse);\r\n      }\r\n      setShow(true);\r\n    }).catch((err) => {\r\n      \r\n        console.log(err.response)\r\n      })\r\n  }\r\n  async function updateInstructor() {\r\n    await axios({\r\n      url: `${backendLink}/HOD/updateInstructor`,\r\n      method: 'post',\r\n      headers: {\r\n        // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n        token:sessionStorage.getItem(\"token\")\r\n       },\r\n      data: {\r\n        academicID: instructorID,\r\n        courseOld: courseName2,\r\n        courseNew:newCourseName\r\n          },\r\n     \r\n    }).then((res) => {\r\n      if (!res.data.error) {\r\n        setAlertResponse2(JSON.stringify(res.data));\r\n        console.log(alertResponse2);\r\n      }\r\n      setShow(true);\r\n    }).catch((err) => {\r\n      \r\n        console.log(err.response)\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n        <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n          <Form>\r\n          \r\n    <Form.Group >\r\n      <Form.Label>Course name</Form.Label>\r\n      <Form.Control onChange={(event)=>setCourseName(event.target.value)} placeholder=\"Enter course name\" />\r\n    </Form.Group>\r\n    <Form.Group >\r\n      <Form.Label>Academic ID</Form.Label>\r\n      <Form.Control onChange={(event)=>setInstructorID(event.target.value)} placeholder=\"Enter academic id\" />\r\n            </Form.Group>\r\n          \r\n          </Form>\r\n          <Button variant=\"primary\" onClick={makeInstructor}>\r\n            Make Instructor\r\n    </Button>\r\n    <Button variant=\"primary\" onClick={deleteInstructor} >\r\n            Delete Instructor\r\n    </Button>\r\n    <Alert color=\"info\" fade={false}>\r\n        <h4 className=\"alert-heading\">Response</h4>\r\n        <p>\r\n          {alertResponse}\r\n        </p>\r\n        <hr />\r\n        {/* <p className=\"mb-0\">\r\n          Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n        </p> */}\r\n      </Alert>\r\n      {/* UPDATE INSTRUCTOR */}\r\n      <Form>\r\n          \r\n          <Form.Group >\r\n            <Form.Label> Old Course name</Form.Label>\r\n            <Form.Control onChange={(event)=>setCourseName2(event.target.value)} placeholder=\"Enter old course name\" />\r\n        </Form.Group>\r\n        <Form.Group >\r\n            <Form.Label>New Course name</Form.Label>\r\n            <Form.Control onChange={(event)=>setNewCourseName(event.target.value)} placeholder=\"Enter new course name\" />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Instructor ID</Form.Label>\r\n            <Form.Control onChange={(event)=>setInstructorID(event.target.value)} placeholder=\"Enter Academic id\" />\r\n           </Form.Group>\r\n                \r\n                </Form>\r\n                \r\n          <Button variant=\"primary\" onClick={updateInstructor} >\r\n                  Update Instructor\r\n          </Button>\r\n          <Alert color=\"info\" fade={false}>\r\n              <h4 className=\"alert-heading\">Response</h4>\r\n              <p>\r\n                {alertResponse2}\r\n              </p>\r\n              <hr />\r\n              {/* <p className=\"mb-0\">\r\n                Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n              </p> */}\r\n            </Alert>\r\n              </div>\r\n   \r\n  );\r\n}","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\requestsInDepartment.js",["341","342","343"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form, Table } from 'react-bootstrap';\r\nimport { Alert } from 'reactstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState, useEffect } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nexport default function RequestsInDepartment(props) {\r\n    const [daysOff, setDaysOff] = useState([]);\r\n    const [requests, setRequests] = useState([]);\r\n    const [alertResponse, setAlertResponse] = useState([]);\r\n    const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n        sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n    let r = [];\r\n    useEffect(() => {\r\n        getDaysOff();\r\n        getRequests();\r\n    }\r\n        , []);\r\n    async function getDaysOff() {\r\n        await axios({\r\n            url: `${backendLink}/HOD/viewDaysOffInDepartment`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setDaysOff(res.data);\r\n            }\r\n            \r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function getRequests() {\r\n        await axios({\r\n            url: `${backendLink}/HOD/viewChangeDayOffRequests`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                r = res.data;\r\n            }\r\n            \r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        });\r\n        await axios({\r\n            url: `${backendLink}/HOD/viewLeaveRequests`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                r = [...r, ...res.data];\r\n                setRequests(r);\r\n            }\r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function acceptRequest(key) {\r\n        await axios({\r\n            url: `${backendLink}/HOD/acceptRequest`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                _id:requests[key]._id\r\n            }\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setAlertResponse(JSON.stringify(res.data));\r\n            }\r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        });\r\n    }\r\n    async function rejectRequest(key) {\r\n        await axios({\r\n            url: `${backendLink}/HOD/rejectRequest`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                _id:requests[key]._id\r\n            }\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setAlertResponse(JSON.stringify(res.data));\r\n            }\r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        }); \r\n    }\r\n    return (\r\n        <div className='main-container'>\r\n             <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n            <h2>Days OFF In Department</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Day OFF</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    daysOff.map((c, i) => {\r\n                        return (\r\n                            <tr key={i+1}>\r\n                            <td>{i+1}</td>\r\n                            <td>{c.academicMember}</td>\r\n                            <td>{c.dayOff}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }  \r\n            \r\n            </tbody>\r\n            </Table>\r\n            <h2>Requests In Department</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>From</th>\r\n                <th>To</th>\r\n                <th>Type</th>\r\n                <th>Reason</th>\r\n                <th>Status</th>\r\n                <th>Date of Request</th>\r\n                <th>Documents In Drive Link</th>\r\n                <th>Accept Request</th>\r\n                <th>Reject Request</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    requests.map((c, i) => {\r\n                        return (\r\n                            <tr key={i+1}>\r\n                            <td>{i+1}</td>\r\n                            <td>{c.from}</td>\r\n                            <td>{c.to}</td>\r\n                            <td>{c.type}</td>\r\n                            <td>{c.reason}</td>\r\n                            <td>{c.status}</td>\r\n                            <td>{c.dateOfRequest}</td>\r\n                            <td>{c.documentsDriveLink}</td>\r\n                            <td> <Button variant=\"primary\" onClick={()=>{acceptRequest(i)}} >\r\n                                   Accept\r\n                                </Button>\r\n                            </td>\r\n                            <td> <Button variant=\"primary\" onClick={()=>{rejectRequest(i)}} >\r\n                                   Reject\r\n                                </Button>\r\n                            </td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }  \r\n            \r\n            </tbody>\r\n            </Table>\r\n            <Alert color=\"info\" fade={false}>\r\n              <h4 className=\"alert-heading\">Response</h4>\r\n              <p>\r\n                {alertResponse}\r\n              </p>\r\n              <hr />\r\n              {/* <p className=\"mb-0\">\r\n                Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n              </p> */}\r\n            </Alert>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\staffInDepartment.js",["344"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form,Table } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState, useEffect } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nexport default function StaffInDepartment(props) {\r\n    const [courseName, setCourseName] = useState('');\r\n    const [academicsDep, setAcademicsDep] = useState([]);\r\n    const [academicsCourse, setAcademicsCourse] = useState([]);\r\n    const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n        sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n    useEffect(() => {\r\n        async function fetchMyData() {\r\n            await getAcademicsInDep();\r\n           \r\n        }\r\n        fetchMyData();\r\n     },[])\r\n    async function getAcademicsInDep() {\r\n        await axios({\r\n            url: `${backendLink}/HOD/viewStaffByDepartment`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            setAcademicsDep(res.data);\r\n            \r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function getAcademicsInCourse() {\r\n        await axios({\r\n            url: `${backendLink}/HOD/viewStaffByCourseName`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                courseName:courseName\r\n            }\r\n        }).then((res) => {\r\n            setAcademicsCourse(res.data);\r\n            \r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n             <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n            <h2>Staff In Department</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Courses</th>\r\n                <th>Instructor For</th>\r\n                <th>Coordinator For</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    academicsDep.map((c, i) => {\r\n                        return (\r\n                            <tr key={i+1}>\r\n                            <td>{i+1}</td>\r\n                            <td>{c.id}</td>\r\n                            <td>{c.email}</td>\r\n                            <td>{c.name}</td>\r\n                            <td>{c.courses}</td>\r\n                            <td>{c.instructorFor}</td>\r\n                            <td>{c.coordinatorFor}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }  \r\n            \r\n            </tbody>\r\n            </Table>\r\n            <h2>Search Staff By Course</h2>\r\n            <Form>\r\n          \r\n          <Form.Group >\r\n            <Form.Label>Course name</Form.Label>\r\n            <Form.Control onChange={(event)=>setCourseName(event.target.value)} placeholder=\"Enter course name\" />\r\n        </Form.Group>                \r\n        </Form>\r\n                \r\n          <Button variant=\"primary\" onClick={getAcademicsInCourse} >\r\n                Show Academics\r\n          </Button>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Courses</th>\r\n                <th>Instructor For</th>\r\n                <th>Coordinator For</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    academicsCourse.map((c, i) => {\r\n                        return (\r\n                            <tr key={i+1}>\r\n                            <td>{i+1}</td>\r\n                            <td>{c.id}</td>\r\n                            <td>{c.email}</td>\r\n                            <td>{c.name}</td>\r\n                            <td>{c.courses}</td>\r\n                            <td>{c.instructorFor}</td>\r\n                            <td>{c.coordinatorFor}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }  \r\n            \r\n            </tbody>\r\n            </Table>\r\n            \r\n        </div>\r\n    );\r\n\r\n    \r\n}","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\HODMain.js",[],"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\courseInstructorStaff.js",["345","346","347","348","349"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form,Table } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState, useEffect } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nimport '../../Stylesheets/Rokaya/ViewSchedule.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nimport '../../Stylesheets/Rokaya/viewSentReplacementRequests.css'\r\nimport '../../Stylesheets/Rokaya/MainAcademic.css'\r\nexport default function Staff(props) {\r\n    const [courseName, setCourseName] = useState('');\r\n    const [academicsDep, setAcademicsDep] = useState([]);\r\n    const [academicsCourse, setAcademicsCourse] = useState([]);\r\n    const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n        sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n    useEffect(() => {\r\n        async function fetchMyData() {\r\n            await getAcademicsInDep();\r\n            await getAcademicsInCourse();\r\n           \r\n        }\r\n        fetchMyData();\r\n     },[])\r\n    async function getAcademicsInDep() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/viewStaffByDep`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setAcademicsDep(res.data);\r\n            }\r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function getAcademicsInCourse() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/viewStaffByCourse`,\r\n            method: 'get',\r\n            headers: {\r\n                token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTMiLCJyb2xlIjoiVEEiLCJpYXQiOjE2MDk4Mjk3NjR9.WAu45Jn6ar0YkZjD53CkkL9rim4rOWUjXwJQpimzLoA\"\r\n            },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setAcademicsCourse(res.data);\r\n            \r\n            }\r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n              {/* <img className=\"MainAcademicLogo\" src={logo} alt=\"Logo\" /> */}\r\n            <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n            <h2>Staff In Department</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Courses</th>\r\n                <th>Instructor For</th>\r\n                <th>Coordinator For</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    academicsDep.map((c, i) => {\r\n                        return (\r\n                            <tr key={i+1}>\r\n                            <td>{i+1}</td>\r\n                            <td>{c.id}</td>\r\n                            <td>{c.email}</td>\r\n                            <td>{c.name}</td>\r\n                            <td>{c.courses}</td>\r\n                            <td>{c.instructorFor}</td>\r\n                            <td>{c.coordinatorFor}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }  \r\n            \r\n            </tbody>\r\n            </Table>\r\n            <h2>Staff By Course</h2>\r\n            \r\n          <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Courses</th>\r\n                <th>Instructor For</th>\r\n                <th>Coordinator For</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    academicsCourse.map((c, i) => {\r\n                        return (\r\n                            <tr key={i+1}>\r\n                            <td>{i+1}</td>\r\n                            <td>{c.id}</td>\r\n                            <td>{c.email}</td>\r\n                            <td>{c.name}</td>\r\n                            <td>{c.courses}</td>\r\n                            <td>{c.instructorFor}</td>\r\n                            <td>{c.coordinatorFor}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }  \r\n            \r\n            </tbody>\r\n            </Table>\r\n            \r\n        </div>\r\n    );\r\n\r\n    \r\n}","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageCoursesInstructor.js",["350","351"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Alert } from 'reactstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nexport default function ManageCoursesInstructor(props) {\r\n    const [instructorID, setInstructorID] = useState('');\r\n    const [courseName, setCourseName] = useState('');\r\n    const [show, setShow] = useState(true);\r\n  const [alertResponse, setAlertResponse] = useState('');\r\n  const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n      sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n    async function addAcademicToCourse() {\r\n        await axios({\r\n          url: `${backendLink}/courseInstructor/assignAcademicToCourse`,\r\n          method: 'post',\r\n          headers: {\r\n            // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            token:sessionStorage.getItem(\"token\")\r\n           },\r\n          data: {\r\n            academicID: instructorID,\r\n            courseName:courseName\r\n              },\r\n         \r\n        }).then((res) => {\r\n          if (!res.data.error) {\r\n            setAlertResponse(JSON.stringify(res.data));\r\n            console.log(alertResponse);\r\n          }\r\n            setShow(true);\r\n            \r\n        }).catch((err) => {\r\n          \r\n            console.log(err.response)\r\n          })\r\n      }\r\n      async function removeAcademicFromCourse() {\r\n        await axios({\r\n          url: `${backendLink}/courseInstructor/removeAcademicFromCourse`,\r\n          method: 'post',\r\n          headers: {\r\n            // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n            token:sessionStorage.getItem(\"token\")\r\n           },\r\n          data: {\r\n            academicID: instructorID,\r\n            courseName:courseName\r\n              },\r\n         \r\n        }).then((res) => {\r\n          if (!res.data.error) {\r\n            setAlertResponse(JSON.stringify(res.data));\r\n            console.log(alertResponse);\r\n          }\r\n          setShow(true);\r\n        }).catch((err) => {\r\n          \r\n            console.log(err.response)\r\n          })\r\n      }\r\n    async function makeCoordinator() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/makeCoordinator`,\r\n            method: 'post',\r\n            headers: {\r\n              // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n              token:sessionStorage.getItem(\"token\")\r\n             },\r\n            data: {\r\n              academicID: instructorID,\r\n              courseName:courseName\r\n                },\r\n           \r\n          }).then((res) => {\r\n            if (!res.data.error) {\r\n              setAlertResponse(JSON.stringify(res.data));\r\n              console.log(alertResponse);\r\n            }\r\n            setShow(true);\r\n          }).catch((err) => {\r\n            \r\n              console.log(err.response)\r\n            })\r\n    }\r\n    return (\r\n      <div className=\"main-container\">\r\n           <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n        <Form>\r\n        \r\n  <Form.Group >\r\n    <Form.Label>Course name</Form.Label>\r\n    <Form.Control onChange={(event)=>setCourseName(event.target.value)} placeholder=\"Enter course name\" />\r\n  </Form.Group>\r\n  <Form.Group >\r\n    <Form.Label>Academic ID</Form.Label>\r\n    <Form.Control onChange={(event)=>setInstructorID(event.target.value)} placeholder=\"Enter academic id\" />\r\n          </Form.Group>\r\n        \r\n        </Form>\r\n        <Button variant=\"primary\" onClick={addAcademicToCourse}>\r\n        Assign Academic to Course\r\n  </Button>\r\n  <Button variant=\"primary\" onClick={removeAcademicFromCourse} >\r\n                Remove Academic from Course\r\n  </Button>\r\n  <Button variant=\"primary\" onClick={makeCoordinator} >\r\n         Make Academic Coordinator for Course\r\n  </Button>\r\n  <Alert color=\"info\" fade={false}>\r\n      <h4 className=\"alert-heading\">Response</h4>\r\n      <p>\r\n        {alertResponse}\r\n      </p>\r\n      <hr />\r\n      {/* <p className=\"mb-0\">\r\n        Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n      </p> */}\r\n    </Alert>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\courseInstructorMain.js",[],"C:\\Users\\Hp\\Desktop\\GUC-Portal\\GUC-Portal\\frontend\\src\\Pages\\Hagar\\manageSlotsInstructor.js",["352","353"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../Stylesheets/Hagar/HOD.css';\r\nimport { Button, Form, Table } from 'react-bootstrap';\r\nimport { Alert } from 'reactstrap';\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useState, useEffect } from 'react';\r\nimport logo from '../../Images/GUC.png'\r\nimport { useHistory } from 'react-router'\r\nexport default function ManageSlots(props) {\r\n    const [courseCoverage, setCourseCoverage] = useState([]);\r\n    const [slots, setSlots] = useState([]);\r\n    const [courseName, setCourseName] = useState(''); \r\n    const [slotId, setSlotId] = useState('');\r\n    const [updated, setUpdated] = useState(true);\r\n    const [academic, setAcademic] = useState('');\r\n    const [academic2, setAcademic2] = useState('');\r\n    const [alertResponse, setAlertResponse] = useState('');\r\n    const [alertResponse2, setAlertResponse2] = useState('');\r\n    const history = useHistory()\r\n    const logoutClick= async ()=>{\r\n        sessionStorage.removeItem(\"token\")\r\n        await axios({\r\n          url: `${backendLink}/logging/logout`,\r\n          method: 'post',\r\n        }).then((res) => {\r\n            console.log(res)\r\n            \r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n          })\r\n        history.push(\"/\")\r\n      }\r\n    useEffect(() => {\r\n        async function fetchMyData() {\r\n            await getCoverage();\r\n            await getSlots();\r\n           \r\n        }\r\n        fetchMyData();\r\n     },[updated])\r\n    async function getCoverage() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/courseCoverage`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n            if (!res.data.error) {\r\n                setCourseCoverage(res.data);\r\n            }\r\n           \r\n        }).catch((err) => {\r\n     \r\n            console.log(err.response)\r\n        })\r\n    }\r\n\r\n    \r\n    async function getSlots() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/slotsAssignment`,\r\n            method: 'get',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {}\r\n        }).then((res) => {\r\n           if(!res.data.error)\r\n            setSlots(res.data);\r\n           \r\n        }).catch((err) => {\r\n      \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function assignSlotToMember() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/assignSlotToMember`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                academicID: academic,\r\n                _id:slotId\r\n            }\r\n        }).then(async (res) => {\r\n            setAlertResponse(JSON.stringify(res.data));\r\n            if (!res.data.error) {\r\n               \r\n                await getSlots();\r\n                await getCoverage();\r\n            }\r\n           \r\n        }).catch((err) => {\r\n      \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function deleteSlotAssignmentFromMember() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/deleteSlotAssignmentFromMember`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                academicID: academic,\r\n                _id:slotId\r\n            }\r\n        }).then(async (res) => {\r\n            setAlertResponse(JSON.stringify(res.data));\r\n            if (!res.data.error) {\r\n                \r\n                await getSlots();\r\n                await getCoverage();\r\n            }\r\n           \r\n        }).catch((err) => {\r\n      \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    async function updateSlotAssignmentToMember() {\r\n        await axios({\r\n            url: `${backendLink}/courseInstructor/updateSlotAssignmentToMember`,\r\n            method: 'post',\r\n            headers: {\r\n                // token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFjLTEiLCJyb2xlIjoiY29vcmRpbmF0b3IiLCJpYXQiOjE2MDkzNDA3MTR9.Gj-oLfyvDPDNY6f_PBmPuWU6_Ep8ZJtKc9h4NEBiAZE\",\r\n                token:sessionStorage.getItem(\"token\")\r\n               },\r\n            data: {\r\n                academicID: academic2,\r\n                _id: slotId,\r\n                courseName:courseName\r\n            }\r\n        }).then(async (res) => {\r\n            setAlertResponse2(JSON.stringify(res.data));\r\n            if (!res.data.error) {\r\n                \r\n                await getSlots();\r\n                await getCoverage();\r\n            }\r\n           \r\n        }).catch((err) => {\r\n      \r\n            console.log(err.response)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main-container\">\r\n              <i className=\"fa fa-sign-out fa-lg sign-out-logo\" onClick={logoutClick}></i>\r\n            <h2>Courses Coverage</h2>\r\n        <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>#</th>\r\n            <th>Course</th>\r\n            <th>Coverage</th>\r\n           \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                courseCoverage.map((c, i) => {\r\n                    return (\r\n                        <tr key={i+1}>\r\n                        <td>{i+1}</td>\r\n                        <td>{c.Course}</td>\r\n                        <td>{c.Coverage}</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }  \r\n           \r\n        </tbody>\r\n            </Table>\r\n            <h2>Slots Assignments</h2>\r\n            \r\n    <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>#</th>\r\n            <th>Member</th>\r\n            <th>Order</th>\r\n            <th>Day</th>\r\n            <th>Course</th>\r\n            <th>Location</th>\r\n            <th>Select</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                slots.map((c, i) => {\r\n                    return (\r\n                        <tr key={i+1}>\r\n                        <td>{i+1}</td>\r\n                        <td>{c.academicMember}</td>\r\n                        <td>{c.order}</td>\r\n                        <td>{c.day}</td>\r\n                        <td>{c.course}</td>\r\n                        <td>{c.location}</td>\r\n                        <td>  <Button variant=\"primary\" onClick={()=>{setSlotId(slots[i]._id)}} >\r\n                                Choose Slot\r\n                              </Button>\r\n                        </td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }  \r\n           \r\n        </tbody>\r\n            </Table>\r\n            <h2>Manage Slots Assignments</h2>\r\n            <Form>\r\n          \r\n          \r\n          <Form.Group >\r\n            <Form.Label>Academic ID</Form.Label>\r\n            <Form.Control onChange={(event)=>setAcademic(event.target.value)} placeholder=\"Enter academic id\" />\r\n                  </Form.Group>\r\n                \r\n                </Form>\r\n                <Button variant=\"primary\" onClick={assignSlotToMember}>\r\n                  Assign SELECTED Slot to Member\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteSlotAssignmentFromMember} >\r\n                  Remove SELECTED Slot from Member\r\n          </Button>\r\n            <Alert color=\"info\" fade={false}>\r\n              <h4 className=\"alert-heading\">Response</h4>\r\n              <p>\r\n                {alertResponse}\r\n              </p>\r\n              <hr />\r\n              {/* <p className=\"mb-0\">\r\n                Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n              </p> */}\r\n            </Alert>\r\n            <h2>Update Slot Assignment</h2>\r\n            <Form>\r\n          \r\n          \r\n        <Form.Group >\r\n            <Form.Label>New Course name</Form.Label>\r\n            <Form.Control onChange={(event)=>setCourseName(event.target.value)} placeholder=\"Enter new course name\" />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Academic ID</Form.Label>\r\n            <Form.Control onChange={(event)=>setAcademic2(event.target.value)} placeholder=\"Enter Academic id\" />\r\n           </Form.Group>\r\n                \r\n                </Form>\r\n                \r\n          <Button variant=\"primary\" onClick={updateSlotAssignmentToMember} >\r\n                  Update Slot\r\n          </Button>\r\n          <Alert color=\"info\" fade={false}>\r\n              <h4 className=\"alert-heading\">Response</h4>\r\n              <p>\r\n                {alertResponse2}\r\n              </p>\r\n              <hr />\r\n              {/* <p className=\"mb-0\">\r\n                Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n              </p> */}\r\n            </Alert>\r\n        </div>\r\n    );\r\n\r\n}",{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":1,"column":16,"nodeType":"360","messageId":"361","endLine":1,"endColumn":25},{"ruleId":"358","severity":1,"message":"359","line":1,"column":26,"nodeType":"360","messageId":"361","endLine":1,"endColumn":35},{"ruleId":"362","severity":1,"message":"363","line":43,"column":14,"nodeType":"364","endLine":64,"endColumn":16},{"ruleId":"365","severity":1,"message":"366","line":66,"column":42,"nodeType":"364","messageId":"367","endLine":66,"endColumn":44},{"ruleId":"365","severity":1,"message":"366","line":71,"column":40,"nodeType":"364","messageId":"367","endLine":71,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":76,"column":40,"nodeType":"364","messageId":"367","endLine":76,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":81,"column":40,"nodeType":"364","messageId":"367","endLine":81,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":86,"column":40,"nodeType":"364","messageId":"367","endLine":86,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":92,"column":40,"nodeType":"364","messageId":"367","endLine":92,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":97,"column":40,"nodeType":"364","messageId":"367","endLine":97,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":102,"column":40,"nodeType":"364","messageId":"367","endLine":102,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":107,"column":40,"nodeType":"364","messageId":"367","endLine":107,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":112,"column":40,"nodeType":"364","messageId":"367","endLine":112,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":118,"column":40,"nodeType":"364","messageId":"367","endLine":118,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":124,"column":40,"nodeType":"364","messageId":"367","endLine":124,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":129,"column":40,"nodeType":"364","messageId":"367","endLine":129,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":134,"column":40,"nodeType":"364","messageId":"367","endLine":134,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":139,"column":40,"nodeType":"364","messageId":"367","endLine":139,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":144,"column":40,"nodeType":"364","messageId":"367","endLine":144,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":149,"column":40,"nodeType":"364","messageId":"367","endLine":149,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":154,"column":40,"nodeType":"364","messageId":"367","endLine":154,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":159,"column":40,"nodeType":"364","messageId":"367","endLine":159,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":164,"column":40,"nodeType":"364","messageId":"367","endLine":164,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":169,"column":40,"nodeType":"364","messageId":"367","endLine":169,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":174,"column":40,"nodeType":"364","messageId":"367","endLine":174,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":179,"column":40,"nodeType":"364","messageId":"367","endLine":179,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":184,"column":40,"nodeType":"364","messageId":"367","endLine":184,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":189,"column":40,"nodeType":"364","messageId":"367","endLine":189,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":194,"column":40,"nodeType":"364","messageId":"367","endLine":194,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":199,"column":40,"nodeType":"364","messageId":"367","endLine":199,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":204,"column":40,"nodeType":"364","messageId":"367","endLine":204,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":209,"column":40,"nodeType":"364","messageId":"367","endLine":209,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":214,"column":40,"nodeType":"364","messageId":"367","endLine":214,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":222,"column":48,"nodeType":"364","messageId":"367","endLine":222,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":227,"column":48,"nodeType":"364","messageId":"367","endLine":227,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":232,"column":48,"nodeType":"364","messageId":"367","endLine":232,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":237,"column":48,"nodeType":"364","messageId":"367","endLine":237,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":242,"column":48,"nodeType":"364","messageId":"367","endLine":242,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":248,"column":48,"nodeType":"364","messageId":"367","endLine":248,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":253,"column":48,"nodeType":"364","messageId":"367","endLine":253,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":258,"column":48,"nodeType":"364","messageId":"367","endLine":258,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":263,"column":48,"nodeType":"364","messageId":"367","endLine":263,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":268,"column":48,"nodeType":"364","messageId":"367","endLine":268,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":274,"column":48,"nodeType":"364","messageId":"367","endLine":274,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":280,"column":48,"nodeType":"364","messageId":"367","endLine":280,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":285,"column":48,"nodeType":"364","messageId":"367","endLine":285,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":290,"column":48,"nodeType":"364","messageId":"367","endLine":290,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":295,"column":48,"nodeType":"364","messageId":"367","endLine":295,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":300,"column":48,"nodeType":"364","messageId":"367","endLine":300,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":305,"column":48,"nodeType":"364","messageId":"367","endLine":305,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":310,"column":48,"nodeType":"364","messageId":"367","endLine":310,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":315,"column":48,"nodeType":"364","messageId":"367","endLine":315,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":320,"column":48,"nodeType":"364","messageId":"367","endLine":320,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":325,"column":48,"nodeType":"364","messageId":"367","endLine":325,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":330,"column":48,"nodeType":"364","messageId":"367","endLine":330,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":335,"column":48,"nodeType":"364","messageId":"367","endLine":335,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":340,"column":48,"nodeType":"364","messageId":"367","endLine":340,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":345,"column":48,"nodeType":"364","messageId":"367","endLine":345,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":350,"column":48,"nodeType":"364","messageId":"367","endLine":350,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":355,"column":48,"nodeType":"364","messageId":"367","endLine":355,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":360,"column":48,"nodeType":"364","messageId":"367","endLine":360,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":365,"column":48,"nodeType":"364","messageId":"367","endLine":365,"endColumn":50},{"ruleId":"365","severity":1,"message":"366","line":370,"column":48,"nodeType":"364","messageId":"367","endLine":370,"endColumn":50},{"ruleId":"368","severity":1,"message":"369","line":45,"column":16,"nodeType":"370","messageId":"371","endLine":45,"endColumn":18},{"ruleId":"362","severity":1,"message":"363","line":160,"column":14,"nodeType":"364","endLine":177,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":167,"column":14,"nodeType":"364","endLine":184,"endColumn":16},{"ruleId":"365","severity":1,"message":"366","line":56,"column":34,"nodeType":"364","messageId":"367","endLine":56,"endColumn":36},{"ruleId":"365","severity":1,"message":"366","line":74,"column":34,"nodeType":"364","messageId":"367","endLine":74,"endColumn":36},{"ruleId":"365","severity":1,"message":"366","line":90,"column":34,"nodeType":"364","messageId":"367","endLine":90,"endColumn":36},{"ruleId":"368","severity":1,"message":"372","line":229,"column":13,"nodeType":"370","messageId":"371","endLine":229,"endColumn":15},{"ruleId":"368","severity":1,"message":"372","line":232,"column":13,"nodeType":"370","messageId":"371","endLine":232,"endColumn":15},{"ruleId":"368","severity":1,"message":"372","line":235,"column":10,"nodeType":"370","messageId":"371","endLine":235,"endColumn":12},{"ruleId":"362","severity":1,"message":"363","line":242,"column":14,"nodeType":"364","endLine":255,"endColumn":16},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":78,"column":37,"nodeType":"370","messageId":"371","endLine":78,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":78,"column":63,"nodeType":"370","messageId":"371","endLine":78,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":78,"column":37,"nodeType":"370","messageId":"371","endLine":78,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":78,"column":63,"nodeType":"370","messageId":"371","endLine":78,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":83,"column":37,"nodeType":"370","messageId":"371","endLine":83,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":83,"column":63,"nodeType":"370","messageId":"371","endLine":83,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":80,"column":37,"nodeType":"370","messageId":"371","endLine":80,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":80,"column":63,"nodeType":"370","messageId":"371","endLine":80,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":74,"column":37,"nodeType":"370","messageId":"371","endLine":74,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":74,"column":63,"nodeType":"370","messageId":"371","endLine":74,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"369","line":29,"column":12,"nodeType":"370","messageId":"371","endLine":29,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":32,"column":12,"nodeType":"370","messageId":"371","endLine":32,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":35,"column":12,"nodeType":"370","messageId":"371","endLine":35,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":38,"column":12,"nodeType":"370","messageId":"371","endLine":38,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":41,"column":12,"nodeType":"370","messageId":"371","endLine":41,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":49,"column":12,"nodeType":"370","messageId":"371","endLine":49,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":52,"column":12,"nodeType":"370","messageId":"371","endLine":52,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":55,"column":12,"nodeType":"370","messageId":"371","endLine":55,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":58,"column":12,"nodeType":"370","messageId":"371","endLine":58,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":61,"column":12,"nodeType":"370","messageId":"371","endLine":61,"endColumn":14},{"ruleId":"358","severity":1,"message":"376","line":132,"column":9,"nodeType":"360","messageId":"361","endLine":132,"endColumn":13},{"ruleId":"358","severity":1,"message":"376","line":158,"column":9,"nodeType":"360","messageId":"361","endLine":158,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":59,"column":31,"nodeType":"370","messageId":"371","endLine":59,"endColumn":33},{"ruleId":"368","severity":1,"message":"372","line":59,"column":57,"nodeType":"370","messageId":"371","endLine":59,"endColumn":59},{"ruleId":"368","severity":1,"message":"372","line":90,"column":31,"nodeType":"370","messageId":"371","endLine":90,"endColumn":33},{"ruleId":"368","severity":1,"message":"372","line":90,"column":57,"nodeType":"370","messageId":"371","endLine":90,"endColumn":59},{"ruleId":"362","severity":1,"message":"363","line":171,"column":14,"nodeType":"364","endLine":198,"endColumn":16},{"ruleId":"368","severity":1,"message":"372","line":188,"column":39,"nodeType":"370","messageId":"371","endLine":188,"endColumn":41},{"ruleId":"368","severity":1,"message":"372","line":188,"column":65,"nodeType":"370","messageId":"371","endLine":188,"endColumn":67},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":93,"column":37,"nodeType":"370","messageId":"371","endLine":93,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":93,"column":63,"nodeType":"370","messageId":"371","endLine":93,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"358","severity":1,"message":"377","line":12,"column":10,"nodeType":"360","messageId":"361","endLine":12,"endColumn":14},{"ruleId":"358","severity":1,"message":"378","line":13,"column":10,"nodeType":"360","messageId":"361","endLine":13,"endColumn":14},{"ruleId":"358","severity":1,"message":"379","line":14,"column":7,"nodeType":"360","messageId":"361","endLine":14,"endColumn":18},{"ruleId":"358","severity":1,"message":"380","line":15,"column":5,"nodeType":"360","messageId":"361","endLine":15,"endColumn":9},{"ruleId":"368","severity":1,"message":"372","line":67,"column":18,"nodeType":"370","messageId":"371","endLine":67,"endColumn":20},{"ruleId":"368","severity":1,"message":"372","line":106,"column":37,"nodeType":"370","messageId":"371","endLine":106,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":106,"column":63,"nodeType":"370","messageId":"371","endLine":106,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"373","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"372","line":73,"column":37,"nodeType":"370","messageId":"371","endLine":73,"endColumn":39},{"ruleId":"368","severity":1,"message":"372","line":73,"column":63,"nodeType":"370","messageId":"371","endLine":73,"endColumn":65},{"ruleId":"358","severity":1,"message":"381","line":8,"column":9,"nodeType":"360","messageId":"361","endLine":8,"endColumn":14},{"ruleId":"358","severity":1,"message":"382","line":8,"column":15,"nodeType":"360","messageId":"361","endLine":8,"endColumn":24},{"ruleId":"358","severity":1,"message":"383","line":8,"column":25,"nodeType":"360","messageId":"361","endLine":8,"endColumn":36},{"ruleId":"358","severity":1,"message":"384","line":8,"column":37,"nodeType":"360","messageId":"361","endLine":8,"endColumn":48},{"ruleId":"358","severity":1,"message":"385","line":8,"column":49,"nodeType":"360","messageId":"361","endLine":8,"endColumn":55},{"ruleId":"358","severity":1,"message":"386","line":21,"column":10,"nodeType":"360","messageId":"361","endLine":21,"endColumn":15},{"ruleId":"358","severity":1,"message":"387","line":21,"column":16,"nodeType":"360","messageId":"361","endLine":21,"endColumn":24},{"ruleId":"358","severity":1,"message":"388","line":22,"column":9,"nodeType":"360","messageId":"361","endLine":22,"endColumn":15},{"ruleId":"362","severity":1,"message":"363","line":75,"column":14,"nodeType":"364","endLine":92,"endColumn":16},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"368","severity":1,"message":"369","line":46,"column":19,"nodeType":"370","messageId":"371","endLine":46,"endColumn":21},{"ruleId":"358","severity":1,"message":"359","line":1,"column":15,"nodeType":"360","messageId":"361","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"374","line":7,"column":8,"nodeType":"360","messageId":"361","endLine":7,"endColumn":13},{"ruleId":"358","severity":1,"message":"375","line":11,"column":36,"nodeType":"360","messageId":"361","endLine":11,"endColumn":44},{"ruleId":"358","severity":1,"message":"389","line":70,"column":19,"nodeType":"360","messageId":"361","endLine":70,"endColumn":26},{"ruleId":"358","severity":1,"message":"373","line":8,"column":8,"nodeType":"360","messageId":"361","endLine":8,"endColumn":12},{"ruleId":"358","severity":1,"message":"373","line":9,"column":8,"nodeType":"360","messageId":"361","endLine":9,"endColumn":12},{"ruleId":"358","severity":1,"message":"390","line":16,"column":10,"nodeType":"360","messageId":"361","endLine":16,"endColumn":14},{"ruleId":"358","severity":1,"message":"391","line":4,"column":18,"nodeType":"360","messageId":"361","endLine":4,"endColumn":22},{"ruleId":"358","severity":1,"message":"373","line":9,"column":8,"nodeType":"360","messageId":"361","endLine":9,"endColumn":12},{"ruleId":"362","severity":1,"message":"392","line":34,"column":11,"nodeType":"393","endLine":34,"endColumn":13,"suggestions":"394"},{"ruleId":"358","severity":1,"message":"373","line":8,"column":8,"nodeType":"360","messageId":"361","endLine":8,"endColumn":12},{"ruleId":"358","severity":1,"message":"385","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":16},{"ruleId":"358","severity":1,"message":"391","line":4,"column":18,"nodeType":"360","messageId":"361","endLine":4,"endColumn":22},{"ruleId":"358","severity":1,"message":"373","line":8,"column":8,"nodeType":"360","messageId":"361","endLine":8,"endColumn":12},{"ruleId":"358","severity":1,"message":"395","line":15,"column":12,"nodeType":"360","messageId":"361","endLine":15,"endColumn":22},{"ruleId":"358","severity":1,"message":"396","line":15,"column":24,"nodeType":"360","messageId":"361","endLine":15,"endColumn":37},{"ruleId":"358","severity":1,"message":"373","line":9,"column":8,"nodeType":"360","messageId":"361","endLine":9,"endColumn":12},{"ruleId":"358","severity":1,"message":"390","line":14,"column":12,"nodeType":"360","messageId":"361","endLine":14,"endColumn":16},{"ruleId":"358","severity":1,"message":"373","line":9,"column":8,"nodeType":"360","messageId":"361","endLine":9,"endColumn":12},{"ruleId":"358","severity":1,"message":"397","line":16,"column":21,"nodeType":"360","messageId":"361","endLine":16,"endColumn":31},"no-native-reassign",["398"],"no-negated-in-lhs",["399"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'logo' is defined but never used.","'Table' is defined but never used.","'FormText' is defined but never used.","'mem1' is assigned a value but never used.","'stat' is defined but never used.","'date' is defined but never used.","'queryString' is assigned a value but never used.","'data' is assigned a value but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'toggle' is assigned a value but never used.","'success' is assigned a value but never used.","'show' is assigned a value but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'getRequests'. Either include it or remove the dependency array.","ArrayExpression",["400"],"'courseName' is assigned a value but never used.","'setCourseName' is assigned a value but never used.","'setUpdated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"401","fix":"402"},"Update the dependencies array to be: [getRequests]",{"range":"403","text":"404"},[1134,1136],"[getRequests]"]